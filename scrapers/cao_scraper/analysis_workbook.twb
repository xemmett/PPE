<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='all_points_statistics' inline='true' name='federated.1gau13r1tjf27218yx7jk1lhweb5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_points_statistics' name='textscan.06wiglj1i6me7b186a7ek1wmkouq'>
            <connection class='textscan' directory='C:/Users/Emmett/fyp/scrapers/cao_scraper/data' filename='all_points_statistics.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06wiglj1i6me7b186a7ek1wmkouq' name='all_points_statistics.csv' table='[all_points_statistics#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
            <column datatype='string' name='candidates_scoring' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='real' name='percentage_of_total' ordinal='2' />
            <column datatype='integer' name='accumulative_population' ordinal='3' />
            <column datatype='real' name='accumulative_percentage_of_total' ordinal='4' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.06wiglj1i6me7b186a7ek1wmkouq' name='all_points_statistics.csv' table='[all_points_statistics#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
            <column datatype='string' name='candidates_scoring' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='real' name='percentage_of_total' ordinal='2' />
            <column datatype='integer' name='accumulative_population' ordinal='3' />
            <column datatype='real' name='accumulative_percentage_of_total' ordinal='4' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidates_scoring</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidates_scoring]</local-name>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias>candidates_scoring</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_of_total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage_of_total]</local-name>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias>percentage_of_total</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accumulative_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[accumulative_population]</local-name>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias>accumulative_population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accumulative_percentage_of_total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[accumulative_percentage_of_total]</local-name>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias>accumulative_percentage_of_total</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Interval Size' datatype='string' name='[Calculation_1328280470415839232]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL(STR(INT(SPLIT([candidates_scoring], &apos;-&apos;, 2))-INT(SPLIT([candidates_scoring], &apos;-&apos;, 1))))&#13;&#10;THEN &apos;exclude&apos;&#13;&#10;ELSE STR(INT(SPLIT([candidates_scoring], &apos;-&apos;, 2))-INT(SPLIT([candidates_scoring], &apos;-&apos;, 1)))&#13;&#10;END' />
      </column>
      <column caption='First Step pts' datatype='string' datatype-customized='true' name='[Calculation_1328280470419062785]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL((SPLIT([candidates_scoring], &apos;-&apos;, 1)))&#13;&#10;THEN [candidates_scoring]&#13;&#10;ELSE (SPLIT([candidates_scoring], &apos;-&apos;, 1))&#13;&#10;END' />
      </column>
      <column caption='First Step pts (int)' datatype='integer' datatype-customized='true' name='[First Step pts (copy)_1328280470421233667]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT(IF ISNULL((SPLIT([candidates_scoring], &apos;-&apos;, 1)))&#13;&#10;THEN [candidates_scoring]&#13;&#10;ELSE (SPLIT([candidates_scoring], &apos;-&apos;, 1))&#13;&#10;END)' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='all_points_statistics.csv' datatype='table' name='[__tableau_internal_object_id__].[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]' role='measure' type='quantitative' />
      <column caption='Accumulative Population' datatype='integer' name='[accumulative_population]' role='measure' type='quantitative' />
      <column caption='Candidates Scoring' datatype='string' name='[candidates_scoring]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_1328280470419062785]' derivation='None' name='[none:Calculation_1328280470419062785:nk]' pivot='key' type='nominal' />
      <column-instance column='[candidates_scoring]' derivation='None' name='[none:candidates_scoring:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:candidates_scoring:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;130-139&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;220-229&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;310-319&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;400-449&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;500-505&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;590-595&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;100-105&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;190-195&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;280-285&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;370-375&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;460-465&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;550-559&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;110-119&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;200-249&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;300-305&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;390-395&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;480-485&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;570-575&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;150-159&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;240-249&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;330-339&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;420-429&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;510-519&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;610-624&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;140-145&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;230-235&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;320-325&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;410-415&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;500-509&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;590-599&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;120-125&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;210-215&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;300-309&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;390-399&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;480-489&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;570-579&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;180-185&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;270-275&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;360-365&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;450-459&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;540-549&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;100-109&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;190-199&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;280-289&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;370-379&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;460-469&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;550-599&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;170-175&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;260-265&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;350-359&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;440-449&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530-539&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;120-129&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;210-219&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;300-349&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;400-405&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;490-495&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;580-585&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;150-199&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;250-255&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;340-345&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;430-435&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;520-525&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;625&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;&lt;100&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;160-165&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;250-259&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;340-349&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;430-439&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;520-529&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;170-179&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;260-269&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;350-399&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;450-455&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;540-545&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;180-189&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;270-279&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;360-369&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;450-499&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;550-555&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;140-149&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;230-239&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;320-329&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;410-419&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;500-549&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;600&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;130-135&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;220-225&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;310-315&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;400-409&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;490-499&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;580-589&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;100-149&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;200-205&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;290-295&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;380-385&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;470-475&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;560-565&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;160-169&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;250-299&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;350-355&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;440-445&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530-535&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;150-155&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;240-245&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;330-335&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;420-425&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;510-515&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;600-609&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;110-115&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;200-209&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;290-299&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;380-389&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;470-479&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;560-569&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1328280470419062785:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;180&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;380&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;580&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;100&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;300&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;500&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;140&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;340&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;540&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;220&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;420&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;625&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;190&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;390&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;590&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;150&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;350&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;550&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;280&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;480&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;110&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;310&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;510&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;260&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;460&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;160&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;360&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;560&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;&lt;100&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;230&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;430&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;240&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;440&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;270&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;470&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;290&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;490&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;200&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;400&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;600&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;170&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;370&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;570&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;120&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;320&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;520&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;250&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;450&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;210&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;410&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;610&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;130&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;330&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_points_statistics.csv' id='all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62'>
            <properties context=''>
              <relation connection='textscan.06wiglj1i6me7b186a7ek1wmkouq' name='all_points_statistics.csv' table='[all_points_statistics#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
                  <column datatype='string' name='candidates_scoring' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='real' name='percentage_of_total' ordinal='2' />
                  <column datatype='integer' name='accumulative_population' ordinal='3' />
                  <column datatype='real' name='accumulative_percentage_of_total' ordinal='4' />
                  <column datatype='date' date-parse-format='yyyy' name='year' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='ov_year' datatype='string' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;2020&quot;'>
        <calculation class='tableau' formula='&quot;2020&quot;' />
        <members>
          <member value='&quot;2020&quot;' />
          <member value='&quot;2019&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Number of Level 8 Net Acceptance (datasheet21_20_19)' inline='true' name='federated.1qelk7u1ori1xd11nxjra1v76358' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='datasheet21_20_19' name='excel-direct.092n3vv1vqb8ay108kbuo19wx88y'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Emmett/fyp/scrapers/cao_scraper/data/datasheet21_20_19.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.092n3vv1vqb8ay108kbuo19wx88y' name='Number of Level 8 Net Acceptanc' table='[&apos;Number of Level 8 Net Acceptanc$&apos;]' type='table'>
          <columns gridOrigin='A1:E71:no:A1:E71:0' header='yes' outcome='2'>
            <column datatype='string' name='Course Classification' ordinal='0' />
            <column datatype='string' name='Course' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
            <column datatype='integer' name='Total Acceptances' ordinal='3' />
            <column datatype='integer' name='First Preferences' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.092n3vv1vqb8ay108kbuo19wx88y' name='Number of Level 8 Net Acceptanc' table='[&apos;Number of Level 8 Net Acceptanc$&apos;]' type='table'>
          <columns gridOrigin='A1:E71:no:A1:E71:0' header='yes' outcome='2'>
            <column datatype='string' name='Course Classification' ordinal='0' />
            <column datatype='string' name='Course' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
            <column datatype='integer' name='Total Acceptances' ordinal='3' />
            <column datatype='integer' name='First Preferences' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Number of Level 8 Net Acceptanc]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>4</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E71:no:A1:E71:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Course Classification</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Course Classification]</local-name>
            <parent-name>[Number of Level 8 Net Acceptanc]</parent-name>
            <remote-alias>Course Classification</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Course</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Course]</local-name>
            <parent-name>[Number of Level 8 Net Acceptanc]</parent-name>
            <remote-alias>Course</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Number of Level 8 Net Acceptanc]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Acceptances</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Acceptances]</local-name>
            <parent-name>[Number of Level 8 Net Acceptanc]</parent-name>
            <remote-alias>Total Acceptances</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Preferences</remote-name>
            <remote-type>20</remote-type>
            <local-name>[First Preferences]</local-name>
            <parent-name>[Number of Level 8 Net Acceptanc]</parent-name>
            <remote-alias>First Preferences</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Number of Level 8 Net Acceptanc' datatype='table' name='[__tableau_internal_object_id__].[Number of Level 8 Net Acceptanc_C79429E685BA430D830878A20DC6B924]' role='measure' type='quantitative' />
      <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.780612' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.219388' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qelk7u1ori1xd11nxjra1v76358].[sum:2019 Total Acceptances:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1qelk7u1ori1xd11nxjra1v76358].[usr:Calculation_1409626712074571776:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qelk7u1ori1xd11nxjra1v76358]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qelk7u1ori1xd11nxjra1v76358].[sum:2020 Total Acceptances:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Year:ok]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>#2020-01-01 00:00:00#</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>#2019-01-01 00:00:00#</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Arab Emirates&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Number of Level 8 Net Acceptanc' id='Number of Level 8 Net Acceptanc_C79429E685BA430D830878A20DC6B924'>
            <properties context=''>
              <relation connection='excel-direct.092n3vv1vqb8ay108kbuo19wx88y' name='Number of Level 8 Net Acceptanc' table='[&apos;Number of Level 8 Net Acceptanc$&apos;]' type='table'>
                <columns gridOrigin='A1:E71:no:A1:E71:0' header='yes' outcome='2'>
                  <column datatype='string' name='Course Classification' ordinal='0' />
                  <column datatype='string' name='Course' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
                  <column datatype='integer' name='Total Acceptances' ordinal='3' />
                  <column datatype='integer' name='First Preferences' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Points Interval Step Sizes'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_points_statistics' name='federated.1gau13r1tjf27218yx7jk1lhweb5' />
          </datasources>
          <datasource-dependencies datasource='federated.1gau13r1tjf27218yx7jk1lhweb5'>
            <column caption='Interval Size' datatype='string' name='[Calculation_1328280470415839232]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL(STR(INT(SPLIT([candidates_scoring], &apos;-&apos;, 2))-INT(SPLIT([candidates_scoring], &apos;-&apos;, 1))))&#13;&#10;THEN &apos;exclude&apos;&#13;&#10;ELSE STR(INT(SPLIT([candidates_scoring], &apos;-&apos;, 2))-INT(SPLIT([candidates_scoring], &apos;-&apos;, 1)))&#13;&#10;END' />
            </column>
            <column caption='Candidates Scoring' datatype='string' name='[candidates_scoring]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1328280470415839232]' derivation='None' name='[none:Calculation_1328280470415839232:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470415839232:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1328280470415839232:nk]' />
              <groupfilter function='member' level='[none:Calculation_1328280470415839232:nk]' member='&quot;exclude&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470415839232:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:ok]' value='240' />
            <format attr='width' field='[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470415839232:nk]' value='152' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470415839232:nk] / [federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{BB35FDEB-5BBD-45EC-90FA-5B89A49E9596}' />
    </worksheet>
    <worksheet name='Population Receiving Points per Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; </run>
            <run fontsize='8'>cao.ie statistics, aggregated by Emmett Lawlor from </run>
            <run fontsize='8' italic='true'>Leaving Cert Points Statistics</run>
            <run fontsize='8'> (</run>
            <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;http://www.cao.ie/index.php?page=points&amp;amp;bb=mediastats&amp;quot;'>http://www.cao.ie/index.php?page=points&amp;bb=mediastats</run>
            <run fontsize='8'>)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_points_statistics' name='federated.1gau13r1tjf27218yx7jk1lhweb5' />
          </datasources>
          <datasource-dependencies datasource='federated.1gau13r1tjf27218yx7jk1lhweb5'>
            <column-instance column='[population]' derivation='Sum' name='[pcdf:sum:population:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[yr:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:year:ok]' member='2019' />
              <groupfilter function='member' level='[yr:year:ok]' member='2020' />
              <groupfilter function='member' level='[yr:year:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]</column>
            <column>[federated.1gau13r1tjf27218yx7jk1lhweb5].[yr:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]' />
              <text column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[pcdf:sum:population:qk]' />
              <text column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk] + [federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk])</rows>
        <cols>[federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:ok]</cols>
      </table>
      <simple-id uuid='{4699C496-DA9F-4D74-86B6-2810667CBD4F}' />
    </worksheet>
    <worksheet name='Population by Points by Year (2017-2020)'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_points_statistics' name='federated.1gau13r1tjf27218yx7jk1lhweb5' />
          </datasources>
          <datasource-dependencies datasource='federated.1gau13r1tjf27218yx7jk1lhweb5'>
            <column caption='First Step pts' datatype='string' datatype-customized='true' name='[Calculation_1328280470419062785]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL((SPLIT([candidates_scoring], &apos;-&apos;, 1)))&#13;&#10;THEN [candidates_scoring]&#13;&#10;ELSE (SPLIT([candidates_scoring], &apos;-&apos;, 1))&#13;&#10;END' />
            </column>
            <column caption='Candidates Scoring' datatype='string' name='[candidates_scoring]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1328280470419062785]' derivation='None' name='[none:Calculation_1328280470419062785:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1328280470419062785:nk]' />
              <groupfilter function='member' level='[none:Calculation_1328280470419062785:nk]' member='&quot;&lt;100&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;&lt;100&quot;</bucket>
              <bucket>&quot;100&quot;</bucket>
              <bucket>&quot;110&quot;</bucket>
              <bucket>&quot;120&quot;</bucket>
              <bucket>&quot;130&quot;</bucket>
              <bucket>&quot;140&quot;</bucket>
              <bucket>&quot;150&quot;</bucket>
              <bucket>&quot;160&quot;</bucket>
              <bucket>&quot;170&quot;</bucket>
              <bucket>&quot;180&quot;</bucket>
              <bucket>&quot;190&quot;</bucket>
              <bucket>&quot;200&quot;</bucket>
              <bucket>&quot;210&quot;</bucket>
              <bucket>&quot;220&quot;</bucket>
              <bucket>&quot;230&quot;</bucket>
              <bucket>&quot;240&quot;</bucket>
              <bucket>&quot;250&quot;</bucket>
              <bucket>&quot;260&quot;</bucket>
              <bucket>&quot;270&quot;</bucket>
              <bucket>&quot;280&quot;</bucket>
              <bucket>&quot;290&quot;</bucket>
              <bucket>&quot;300&quot;</bucket>
              <bucket>&quot;310&quot;</bucket>
              <bucket>&quot;320&quot;</bucket>
              <bucket>&quot;330&quot;</bucket>
              <bucket>&quot;340&quot;</bucket>
              <bucket>&quot;350&quot;</bucket>
              <bucket>&quot;360&quot;</bucket>
              <bucket>&quot;370&quot;</bucket>
              <bucket>&quot;380&quot;</bucket>
              <bucket>&quot;390&quot;</bucket>
              <bucket>&quot;400&quot;</bucket>
              <bucket>&quot;410&quot;</bucket>
              <bucket>&quot;420&quot;</bucket>
              <bucket>&quot;430&quot;</bucket>
              <bucket>&quot;440&quot;</bucket>
              <bucket>&quot;450&quot;</bucket>
              <bucket>&quot;460&quot;</bucket>
              <bucket>&quot;470&quot;</bucket>
              <bucket>&quot;480&quot;</bucket>
              <bucket>&quot;490&quot;</bucket>
              <bucket>&quot;500&quot;</bucket>
              <bucket>&quot;510&quot;</bucket>
              <bucket>&quot;520&quot;</bucket>
              <bucket>&quot;530&quot;</bucket>
              <bucket>&quot;540&quot;</bucket>
              <bucket>&quot;550&quot;</bucket>
              <bucket>&quot;560&quot;</bucket>
              <bucket>&quot;570&quot;</bucket>
              <bucket>&quot;580&quot;</bucket>
              <bucket>&quot;590&quot;</bucket>
              <bucket>&quot;600&quot;</bucket>
              <bucket>&quot;610&quot;</bucket>
              <bucket>&quot;625&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[yr:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:year:ok]' member='2017' />
              <groupfilter function='member' level='[yr:year:ok]' member='2018' />
              <groupfilter function='member' level='[yr:year:ok]' member='2019' />
              <groupfilter function='member' level='[yr:year:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gau13r1tjf27218yx7jk1lhweb5].[yr:year:ok]</column>
            <column>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]</rows>
        <cols>([federated.1gau13r1tjf27218yx7jk1lhweb5].[yr:year:ok] / [federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk])</cols>
      </table>
      <simple-id uuid='{B850E8E8-4CA0-4C46-9A97-A27047483C98}' />
    </worksheet>
    <worksheet name='Total Acceptances'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;, </run>
            <run fontsize='8'>according to cao.ie statistics (2021 Media Pack, </run>
            <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;http://www.cao.ie/index.php?page=mediapack&amp;amp;bb=mediastats&amp;quot;'>http://www.cao.ie/index.php?page=mediapack&amp;bb=mediastats</run>
            <run fontsize='8'>)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Number of Level 8 Net Acceptance (datasheet21_20_19)' name='federated.1qelk7u1ori1xd11nxjra1v76358' />
          </datasources>
          <datasource-dependencies datasource='federated.1qelk7u1ori1xd11nxjra1v76358'>
            <column datatype='string' name='[Course Classification]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total Acceptances]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Course Classification]' derivation='None' name='[none:Course Classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Acceptances]' derivation='Sum' name='[pcdf:sum:Total Acceptances:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Total Acceptances]' derivation='Sum' name='[sum:Total Acceptances:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qelk7u1ori1xd11nxjra1v76358].[none:Course Classification:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Course Classification:nk]' member='&quot;Isced Narrow Field&quot;' />
              <groupfilter function='member' level='[none:Course Classification:nk]' member='&quot;Specialist Groups&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1qelk7u1ori1xd11nxjra1v76358].[none:Course Classification:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1qelk7u1ori1xd11nxjra1v76358].[sum:Total Acceptances:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1qelk7u1ori1xd11nxjra1v76358].[sum:Total Acceptances:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1qelk7u1ori1xd11nxjra1v76358].[pcdf:sum:Total Acceptances:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qelk7u1ori1xd11nxjra1v76358].[sum:Total Acceptances:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qelk7u1ori1xd11nxjra1v76358].[sum:Total Acceptances:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qelk7u1ori1xd11nxjra1v76358].[tyr:Year:ok]' />
              <text column='[federated.1qelk7u1ori1xd11nxjra1v76358].[pcdf:sum:Total Acceptances:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1qelk7u1ori1xd11nxjra1v76358].[sum:Total Acceptances:qk] + [federated.1qelk7u1ori1xd11nxjra1v76358].[sum:Total Acceptances:qk])</rows>
        <cols>[federated.1qelk7u1ori1xd11nxjra1v76358].[tyr:Year:ok]</cols>
      </table>
      <simple-id uuid='{13E47AC2-B234-4DF8-A496-841995716B36}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='0.833333' source-height='51'>
    <window class='worksheet' maximized='true' name='Population Receiving Points per Year'>
      <cards>
        <edge name='left'>
          <strip size='170'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]' type='color' />
            <card param='[federated.1gau13r1tjf27218yx7jk1lhweb5].[yr:year:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470415839232:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:F10:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:candidates_scoring:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:year:qk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7EF455F8-0D41-4021-B795-03082D087A41}' />
    </window>
    <window class='worksheet' name='Points Interval Step Sizes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470415839232:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:candidates_scoring:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:ok]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EF75250-9F5E-4BC6-87E1-0CEE0C7AF339}' />
    </window>
    <window class='worksheet' name='Population by Points by Year (2017-2020)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:First Step pts (copy)_1328280470420467714:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:First Step pts (copy)_1328280470421233667:ok]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:ok]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:qk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{119FD0A2-2B06-486B-A3B9-ADF2DBAD67BB}' />
    </window>
    <window class='worksheet' name='Total Acceptances'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[federated.1qelk7u1ori1xd11nxjra1v76358].[tyr:Year:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]</field>
            <field>[federated.1qelk7u1ori1xd11nxjra1v76358].[none:Course Classification:nk]</field>
            <field>[federated.1qelk7u1ori1xd11nxjra1v76358].[tyr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F249F2C1-A79B-4165-BB0C-6E2B820F4D3C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='576' name='Points Interval Step Sizes' width='576'>
      iVBORw0KGgoAAAANSUhEUgAAAkAAAAJACAYAAABlmtk2AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd5RVZYLv/e8+uXIVFahcFBQUuUCiKIJAI6Cobeygdhu61c4zd9J9551w
      Z901d2buzHvvTM90sm3brJhtBURFJCqSQXKsIlTOVSfuvd8/ChA4hY1acAr277MWf3DOs/fz
      7Fpr7/U7T9qGbds2IiIiIg7iSnQDRERERC41BSARERFxHAUgERERcRwFIBEREXEcBSARERFx
      HAUgERERcRwFIBEREXEcBSARERFxHAUgERERcRwFIBEREelzpmnS3t6OaZqJbkqvFIBERESk
      z0UiEfbu3Us4HE50U3qlACQiIiKOowAkIiIijqMAJCIiIo6jACQiIiKOowAkIiIijqMAJCIi
      Io6jACQiIiKOowAkIiIijqMAJCIiIo6jACQiIiKOowAkIiIijqMAJCIiIo6jACQiIiKOowAk
      IiIijqMAJCIiIo6jACQiIiKOowAkIiIijqMAJCIiIo6jACQiIiKOowAkIiIijqMAJCIiIo6j
      ACQiIiKOowAkIiIijqMAJCIiIo6jACQiIiKO47nQgpFIhNbW1ovZFhEREblCxGIxAFpaWujs
      7Exwa+JdcAAKh8McO3bsYrZFRERErhC2bePz+TAM43QY6k8M27btRDdCRERErizBYJDq6moq
      KysT3ZReaQ6QiIiIOI4CkIiIiDiOApCIiIg4jgKQiIiIOM4FrwK7UHa4nS2f7iduZrXLy5Bh
      w8lI9vZ1lSIiIiJfSJ8HoLb9a3j0kb8hZp3zRUoe//exZ7h22IC+rlJERETkC+nzAFRz+Ai2
      N5n//i+PM6My67MvDBfpGZl9XZ3IZc22LQ7tWM8HK9dy8Gg9Jm7KKscyf8ECynLTMIyT5cwI
      m9cs450P1tMajFJUMYabb154Vhlsm2BbLUv/8CYbdh4CXyrjp81kwfXTSPK5MIBjO1fyyyff
      JhrfEmzbzZy7v8/cCeWX7PpFRBKlzwPQ4SNHcHuSGTp0CDk5mmIkcn4hFj/5GNs7Upg/93bu
      HVKC2wqxafU7PP7L3/DIz35EUYYf27bY8M7zLN0d475H/4yS7ABbPnyLx3/xax768Q8oy04G
      INLVyJO/+Q1po+bw//7DQ1id9bzx/JP8rjnI9++eg89lUDTyOv7nP18X15JYx1H+1z/9hvJB
      hZf6jyAikhB9nFBsjh6txptUTN4AhR+Rzxcjf/hM/vSH91NVWYbP48LtS2bizJsYN9Bk+4Hj
      PaU6j7F0zQHu+NY3KMtLx+X2MX7mQq4fkcS7q7dg2gA2+zauoD1jNLfdMI0kr5uUrAJu/9Y9
      BPesYW/t521Db7N55bukj7qOimz/pbhwEZGE69seILuTo9XNhDrC/NXDD+I2XGTmFDHtuhnM
      un46WUl93uEkchlLZcLUMef5zsDl6vkRUbd3O3bRWIYOTPnsW5eXMRMnse7VzXRHppLqibLj
      04NUXX03SR7jdDl/ZiFXVWaydedhRhf2Xle0s5YP1h/mph/cjdFrCRGRK08fd9P4mH7jbdxx
      63xGDR/O0CFldNRs45///q/46V//Cw1dZt9WJ3IFOrx1BVvr3YweXADA8eO1FJaU4DknnaRl
      5mNFWukKR7BiMeo7uinOPXeRgYuComLqzvseP5vdn6zEKJ3AsLykPr8WEZH+qm+7ZAw/8775
      Pead/K9t29iWyeLH/o7/8fjbvLHqRh6aV9WnVYpcGWyioU7WLXuNZVsauPehBylI9wEQDkdI
      y06LO8LvD+B3uQibFrZtYWOTFIgfwkpLSyca6eq11mhXA8vX7mH2PT/Gbaj/R0Sc46JO1DEM
      A5fbw+zbbifLDnOo+vjFrE7ksmTbNg3Vu/ndL3/OloYAP/nZj6gszDxjOMrGts7dVwJsbM58
      lbFt2/T2bmPrfO87tm0Obl1HJHskI4oyNfwlIo7Spz1Ake5OIi4fqQHfWZ93NdbThUF6Wsp5
      jhRxrurtK3nqtVVMmL2Q2VPH4Pec/bskJTmZ9o72uONCoSARIMnjxnDZeNweuoIhIHBWuY62
      VpKSs+OONyPtfLhmG1NvevCseUMiIk7Qpz1A7dWb+dlPf8YrS1fT0hXCtixOHNjKP//rryCz
      hBlTRvdldSKXvfZj2/ndog+54Rv3M++aqrjwA1BcWkTNocNEzunIaW86ijuQQ3LAh8vjpSgz
      hSMnGs452qKmupqCkpK48x779CPqvGWMr8jvwysSEbk89GkPUGreIEYNdPOf//j/8O+cmgNk
      4U3N5ad/8w9MLs/6o+cQcQw7yrI3XmfE7NuZNKyI803ByR52FZmL/pVth5qZUD4AwwArFuKj
      1R8xuOprpHgMDMPLuAmjeWblWmaMG0y63w3YdNTuY8PBCPcsLDu7ajvC+++v4eqvPUSKV1tW
      iIjz9GkACgwo4U/+4ec8WF/Nxq07aOuKkpKRy4TJExmQ4vvjJxBxEKvjBDsOhblxXga1tSfi
      vk9OzyIjJYDbm8XNN03nuReeJHbjgp6NEFcvZWdnHo9cPfJkcDIoHX0twzf+hieff4MbZ03G
      7qpnyZtvMWLmLZRmnT0s1rB7HQdixdw5qlRzf0TEkQy7t1mTInLRRVqqeeqF1+kI9b49RNXM
      W5k1vue1FLZlcmT3Zlau/YSmziilw8Yy49qp5KSfHWyiwTY2rF3Jxk8P9rwKY8o1TBozDN9Z
      Q2sWaxe/QLjwGq4fd3bPkIhIXwkGg1RXV1NZWZnopvRKAUhERET6XH8PQBr8FxEREcdRABIR
      ERHHUQASERERx1EAEhEREcdRABIRERHH6duXoYoIAJZlEYvFEt0MEZGEicVi2LZNJBJJdFN6
      pQAkchHYtq0AJCKOdioA9ddnoYbARERExHEUgERERMRxFIBERETEcRSARERExHEUgERERMRx
      FIBERETEcbQMXiTBbNvGNGOYpgWA2+PF7XZhxJWziEaj2Da43B48HndcGbCxTJNozAQMPF4v
      blcvpWyLWDSKZQOGgdfjxXAZvZxPROTKpAAkkkDRYAdb1q9m4/a9tHZ0Y2OQmpXH9DnzGTuk
      gFPZJRZsZ+V7b7Np5xEilk1yei7X37CAMUMKT5fBtmk6upfFS97lWFMHtuGmcMgoFsybTU5a
      4HS4CXc2suLdd9l5sIZQ2MTt9ZFTNJgb5s+lKCslEX8GEZFLzrBt2050I0SuNKZpEg6H/0ip
      bt743ZO0ZZYz8+qJFOYNwGVHObRrI68s/pg7H3yY8pxkbNti9etPsL0rj7tunkN2qpdDOz7i
      pcXr+fp3H2JYfjoAodZjPPH4s1RMX8iMqyqxw+2sWvIqu7rz+N63FhDwuLCjnbz21O/oyh3L
      TbOmkpniJ9LdztZ17/H+tjYe/dH9ZPrUDyQiX104HKa2tpaysrJEN6VXmgMkkjAGY65byLe+
      fgOlBTl43C5cHj+DR09mTIGPfTX1AETbDrN6RzM33jSXnPQkDJeH8jFXM2tcHqvWbiVmA1js
      2bgaCsczY+JwfB4X/pRMZi64GV/9dnad6AAg2NrA/jaYP3saWakBDMPAn5LB5Fk3MSB2kIMn
      y4mIXOkUgEQSJonBFcV4jHN6XCyL7lCEgM8LwIn9u/EPGk1Jhv90EcNwUzFqLK01e+gOW9hm
      lL0HjjN63Ch8Z8z58SRnM2ZoLrt3HwHAGwjgt2J0hKKc2flrhdvpivhJTw1cxOsVEek/FIBE
      +hErFmHLqrc4EMpmzJB8AOrrGskfmM+5c5lT0nKwY510RSJYsRjN3SEGZqWfc0aDvPwCGutr
      AfCm5XPr3Aksfvkltu45RGNTE0f2bufZZ15k6PW3MyTbdwmuUkQk8TQJWqRfsOlqrWP54jfZ
      357KvffdQVbADfS8UDApPTnuCK/Ph8/lJmpZPb05Bvi83rhyScnJWGbXyf8ZFA+fxITjJ3jr
      tZdJS/YTCXWTPWQCM64aqlVgIuIYCkAiCWbbFtW7PuGNJR+SP+JqHrrtatICZ9+aphn/NmXL
      MrEsi1OL123LwrLi1zSYMRPb7iljRbt59/UX6coazo9+fCsZKX4iwU52b17NM8+9xrfvuYMM
      vzqGReTKpyedSILt+WgJT7+5jmsXfpvb510bF37SUlNo72iPOy4cChJ1uUj2eHC53Pg8XrpC
      obhy7e2tpKT2DI01HN7GrkY/N8ycQuapSdDJaVRNm0uxcZSPdlRfnIsUEelnFIBEEqhh30cs
      Wr6Pbz34EOOHFvW6aWHxoDKOHThA0Dyzd8emue4I3uR8kgMeDK+X0px0DlSf4KxSdozDh6op
      HlQKQHdbM0ZSOj7POfUYbrKz0mhsau77ixQR6YcUgEQSxQqxfNkHTJ5/G4NzUzl3Mdgp6WWj
      KTKPsGHXcU4t3IqFOlizZhOV48cT8BgYhofRV41l34Z1NHZGTh5p03h4O5/Wexk/rACAAYXl
      RBsOcKyxkzN3AAt3NrB9Xy2DBxVfvOsVEelHNAdIJEHMjnr210aZZreyY0f8ENeAgjIKs9Nw
      uVOYf9McnvvDi3Q2TKVoQIBPN6yhLaWSG8eVn564nDfkKiaV7uPZZ57nminjsLsaWbtuI5Pn
      3kleas/qrvT8ocyduo+Xfv87xk2eTP6AVIJt9Wz4ZBNZo65nwpC8S/gXEBFJHO0ELXIRXMhO
      0NGOepYtX0Uw2vstOKTqGsYP7em5sW2L1roaNm3eRkt3lKLBI6kaVUGy75zJ0tEwR/ZuZ9ue
      I+BNZdT48QwuzD1raM22YjTXH2PL5m20dIXxJaVTOXoMQ0ry8fQyBCci8mX0952gFYBELoIL
      exWGiMiVq78HIM0BEhEREcdRABIRERHHUQASERERx1EAEhEREcdRABIRERHH0T5AIheBy+XC
      59Ob1UXEuWzbxjCMfvssVAASuQgMw8Dj0e0lIs4VjUb79bNQQ2AiIiLiOApAIiIi4jgKQCIi
      IuI4CkAiIiLiOApAIiIi4jgKQCIiIuI4/XNtmoiD2LZFZ2szrR3d2IaL9KxsMlKTMM4pZ8bC
      NNY3Eo5ZpGYMICsjJa4M2IQ622hsaQeXl+zcXJJ88be5ZUZorG8gFDUJpGaQk5WOy4g/m4jI
      lUoBSCSBulpO8P7Sxew51kog4MewTDq6w0yYeTOzpwzHfTKThNpO8MqiRRxvt0jyu+noCDLh
      +puZNWUEnlO5xbY4vGMdry5ehTs5BTsaxvRl8vU776J8YPrpsNRef5BXX/kDrVE3HpdNV2cn
      JaOv444F0/C5FIJExBkUgEQSpoOXn3iW9KrpPHTTaDJSkjEwaajZw+O/X0RRyc8YVZSObZks
      e/kZurMm8Oi900nxu2k4soPf/n4R2Xk/ZMLgHAA6Gw7ywmvvM/POB5hUWYQdC7Hh/Vd57oU3
      +JMffIsUr5tYdyMvPP0iJdNu4RsTK/F7DDqbjvHcE79jcWY2t147PMF/ExGRS0NzgEQSxseC
      e77HrbMmk5WWgstlYLg85JZWUlWazqFj9QCEG3by0UGbhfNnkBrwYhgucsvGcNN1laxcuZ6o
      DdgW29Z8QMaIGUwaXoTbZeDxJTF59kIGhvaz6VALACf2b6EtqYLrJ48g4HVjGC7Sckq4+/Yb
      +OjdZbTF7AT+PURELh0FIJGE8ZObl4FxztwbKxqitrmTzPQUAGr27iGrciz5Ke7TZQzDoLRy
      NF21++gKmdhmhL1HGhg7thL3Gedz+dIZPbyYPbsPANDWWE/qwAJ87rPrzCwfSyE1HDzedbEu
      VkSkX1EAEulHYqF23n3tWZpShlE1eCAADY3NDMzLiyubnJKFYYboDEcwYzHaQiFy0tPiyuXk
      DaSloac3KT07j7YTNYRj1tmFjGRyc1JoaWvv+4sSEemHFIBE+gWb5mN7+N1//Qf7wgU8dN+t
      pPl6bk/TNAn4A3FHeL1evG43pm0DNoYBXm/8tL6k5GQsKwZAQUUVWaF9vLJkNe3BCLZt0d3W
      yJb1qzjSEMQ0rbjjRUSuRJoELZJgthll29qlvPruRqbecDuzp47C5z7jt4lhEI1G444zTRPT
      NE+v7rIsG9M048pFImE4WcqbksO9Dz7EsiVv8y//sJiobZCZW0hl5Qgy0wN4++lbm0VE+pqe
      diIJZFtRVv/hKd7bE+a+H/wJQ/Iz4soMyMxgc2Nz3OfB7g5ibi+pPi8ut0GK309bVzeQfFa5
      lqZGMrKGnPyfQXJWIbd+63vcemYhK8jPN75Lbk5mn12biEh/piEwkQQ6vPl93t0Z4pFH7u81
      /ACUVgyhbt8u2qJnrtCyqa/Zhz+jhOSAF5fHx5DCLHbvq+bMQSzbDLFvXzWDhgz63Ha0HN5G
      g6+CQXnxQ20iIlciBSCRRDE7eX/ZambcfDsFGUnnLZZSPIahgXpWfrIH62QGinQ2sOyDTVx1
      9WT8bsBwM3byFA5tWEFNU/fJI22qd6xjd0cmEysHnvzMIhKJcmaUCnc08Pob73L13K+RoieC
      iDiEhsBEEiTWVsehxigZ1VtYdjw+eZQMH8+I0lxcrgA333UHj/3+eeoPjaEoO8CnG9aTMWI2
      08eUnJ4DlD2oinkT9/P4f/6cCRPHYnc1sGn7IW6692Gyk7ynamXZc7+m2sqivDAXO9LJts3b
      KZ40lznjyi7ZtYuIJJph27Z2PhNJgFhXMx9t2EIo2vvKq+LKcQwvyTn9/2iwjR1bt9PUFaWk
      YhTDyvJ6fRdYy4lDbNt9GLypjB43luzUs4e1rFiYg3t2UlPbhOFNZujIMRTmpPVyLhGRLy8Y
      DFJdXU1lZWWim9IrBSARERHpc/09AGnEX0RERBxHAUhEREQcRwFIREREHEcBSERERBxHAUhE
      REQcR/sAiVwEpmkSiUQS3QwRkYQJh8NYlkUwGEx0U3qlACRykWiHCRFxslPPwP76LNQQmIiI
      iDiOApCIiIg4jgKQiIiIOI4CkIiIiDiOApCIiIg4jgKQiIiIOI6WwYskmG2bNByvobahFctw
      kVc0iIKcdIxzysXCXRw6cIjOcIzsgjJK8rPiypwS6W7lYHUzQ4YPxttrpRbHj+ynvqWLQHo2
      gwcV43Pr95CIOIdh99cF+iKXMdM0CYfDf7RcW+1B3njjTRojSZQW5eG2wuzfd4DySfO4dfYE
      PCcTTlfjYZ5+ZhFGRhF5mX4O7dnLoIlzWThrIt4zcosZ7mTTug9ZvuYTIu5SfvpXD5B+Tp12
      rIulLz3L9nqLoaUDaTpxmC5vId+5704y/QpBItI3wuEwtbW1lJWVJbopvVIPkEjCdLDkjfeo
      nP517h1Zdro3J9JZz29/+TjbK8oZP2gAVjTIWy+/ROHEG7npmlG4DAi3n+CJx5/mo/x8rh1V
      jGFA+4m9PPvSEgYOu4r7v3sHv39qfXyVtsmWDxezuzuXn/7oVvxuA6ww7738JC+/vZr7b70O
      dQSJiBPoUSeSMGl84+HvM+WM8APgTR7AoLx0mts6AGjYs46DxhDmnww/AP70Am67eSafrPiA
      rlhPJ256wTAe/clPuW3edDKSeh34ItJ2gvc3HeXOO+b3hB8Al585t3+D8K7l7G0IXayLFRHp
      VxSARPqZugOb2V4bY1jpQABOHK+lsKQY7zkTftKz8jEjLQRDF/7Osc72JlxJmWQl+c/+wp1O
      QV4SdfVNX7X5IiKXBQ2BifQTthXl04/e480PdzLvjm9TnBUAIBgKkZaZFlfe50/CB4RM84Lr
      iMXC+LypuN3x06fTU9MIhv74vCURkSuBApBIgtm2TXdrLUtef4XqYBr3fv9RigckfzYsZgPG
      +dZ7GXyRVQw9ax56P5dx3jpERK48CkAiCdZ4eBvPvryUknEzeGTGJJJ97rO+DwT8dHZ2xB0X
      CYeI2BYBtzvuu/PxegNEoh2Ypg3n9AK1dXaQFfCf50gRkSuL5gCJJFB340GefmEJ4+bcwa1z
      psaFH4CCwnxOHD1G7Jyuno7WOtz+LJL9vguuLzU9GzvUTtu5Q11mJ7UNQfLzsr/MZYiIXHYU
      gEQSxmTV0rcYeNVcrhs35NwOmdNyK8bgq/uUfbWdpz+zrSg7Nm4if9goks+dHf05fOl5VObA
      +u2HOXMHsOO7NtCaNJiy3MCXvRgRkcuKApBIgthd9Wzb38nEiZVEI2HC4bP/RWM9k5tdgVzm
      XjeSP7y0iH1HGwh2d7D+/Tf4+KibOVeP7lkab9vEopHTx0YiUWzbInL6fJGeuUIuH9O/Nofd
      K95gzfYDdAe7ObL7E557fR1zb55Psp4IIuIQ2gla5CK4kJ2gw02HeeypF+kIWb1+P2HOncyd
      VAGAbcXYs3ktK9ZsoKU7StGQ0cyZPZPCASk9ha0o77/6NOv31fV6Lpc7j+//xYNknfx/87F9
      LH3nParrWknJLmT69XOoqijURGgR6TP9fSdoBSCRi+BCX4UhInKl6u8BSB3eIiIi4jgKQCIi
      IuI4CkAiIiLiOApAIiIi4jgKQCIiIuI4ehWGyEVgGAYej24vEXEu0zT79bOwf7ZK5DLncrnw
      +S78FRUiIleaUwGovz4LNQQmIiIijqMAJCIiIo6jACQiIiKOowAkIiIijqMAJCIiIo6jACQi
      IiKOowAkIiIijqN9gEQSyDKj7Nv6EStWf8yR441YhpuiISOZt+BGKgoyMYyT5aIhPlm5hPdW
      baI9FCO/bAQLb1nIkIKs02UAbNsi1N7Ah+8tZdMBkx/9xQOk91KvbZnUHdnN0sVLsMumc/9N
      Uy7J9YqI9BcKQCIJE+Tt3z/G3mgW8xbczf3lRbjNMNs+fp+nH3uM7/30J5Rk+rFti/VLn2P5
      ITf3/egvKMrys33NUp76zW/57o9+wOCcFAAinU188O5SNu0+xvARJYS7WnuttalmF0vfWc6x
      TjfFqW7aoualvGgRkX5BQ2AiCWNRUvU1fvz9exhVUYLP7cLtS2LcNfMYlw+fHjgOQKyjhmUf
      HeH2b9xJSU4aLrePsdcuYNaoVN5ftQXT7jlbR8Mx3ANH8sOf/YwF08fhPk+tNTXHGHnNjfzp
      Tx6makj+pblUEZF+Rj1AIgmTwriJI3r53Ma0bNzunt8ntXu3YxRXUZGbfLqE4fIwasJE1ryy
      ka7I1aT7XWSXj2VOec/34e7z1zpu2pw+vAYRkcuTeoBE+hHbttm/8T22N/oYU1EIwInjdRQW
      F+M2zi6bljkQK9JGVyiSgJaKiFze1AMk0i/YRLrbWLXkVT7c3cF3vv8A+aleAMKRKGnZqXFH
      +P0B/C43Ecu61I0VEbnsKQCJJJhtW9Qd/pRXX3kT8kbyk5/eQ07qmW9PtjF7CTm2ZWPbCj8i
      Il+GApBIgh3a8gFPv/kR0+bdyowJI/B5zh6ZTklJpr29Le64ULibCAZJHt3GIiJflOYAiSRQ
      W81Wnnh5DQvveZDZk0fFhR+AktJijh46TMQ+59jGo7iTckkJeC9Ra0VErhwKQCKJYkdY+vrr
      VM27m/GD83EZvRfLHjaB7PZP2bS/AftkCLKi3axZuY6K8RNI9pznQBEROS/1nYskiNVRy87q
      CPPn+qipqY77PjUrlwFpSbg8Gdy8cCbPLHqK6A1zKclOYuvqZRyIFPPwlBE9O0HbFi2NdXQE
      owBEWuuJRLs5Wl1Nz/RpL4WlBbhiEerq6oie3DyovrmD7s4mqqt76vcmp1OQk3lp/gAiIglk
      2LZt//FiItLXIi1Hee6VP9AV7n0i85hrb+S6qkFAz6srju7fwep1G2juilAydCzXXj2RAan+
      nsJWlNVLX2XrocZez2W4svn2o98gpaOBl195haau3nd/zq6YyDdu0GsxROSrCwaDVFdXU1lZ
      meim9EoBSERERPpcfw9AmgMkIiIijqMAJCIiIo6jACQiIiKOowAkIiIijqMAJCIiIo6jfYBE
      LgLLsojFYoluhohIwkSjUWzbJhKJJLopvVIAErkIbNtWABIRRzNNs18/CzUEJiIiIo6jACQi
      IiKOowAkIiIijqMAJCIiIo6jACQiIiKOowAkIiIijqNl8CIJZts20UiYSLRnqajXH8Dn9WCc
      W84yCQVDmLaNx+fH7/PGlTnFMmOEwlECyUm9/8qxbSLhEJGYCRj4/AG8HheGcb4ziohcWRSA
      RBIo3N3GprUr2bL7IN2hKLYNvpQMps2az1WVxbhO5pFodwvL33mbHQdqsbDx+tO59msLGF9Z
      gvuMzGKZUepq9rNyxQr21/n58V8+QPpZNdoEO5rZsHYV2/YcJhiJYQOB1Cyuu2EhY8vzzhuq
      RESuJApAIgnTzdvPPUs4r5Jb7rqPgTmZGFaUmn1bWPTGIrIeeJghuSnYtsmaJS9xOFLC/Y/c
      QVayh+rdG3jx9UWk3vcQwwszes7WfJS33n6H5oiPcSMrOHSiJr7KUBuvLnoRX8Eobv/29eRm
      pYMZ5siuDbz44rPk/PBHFKV5L/HfQUTk0tMcIJGEMZg4+zbuWjiLwrws3C4Dl8dH6fCrGFMY
      4EBNPQDR1kOs3dnOggWzGZAawHB5KB0xmTlXFbBq3VZids/ZYpEoo6bdwP33fYvxlaW939yG
      l2vn38Ft864jPzsDt8vA7Q0weOw0hmXHOFjTdMmuXkQkkRSARBImidLyfNznzLuxzRjt3SGS
      kvwAHN+3h6TyMRSn+06XMQwX5SPH0nZ0D91hC4D0/HJGDSnG73Wfv0p/CmWFebhd59YZobMr
      QlJSoI+uTUSkf1MAEulHzGiIjSv+QHVsIGMG5wPQ0NDIwIEDOXd+ckrqAIh10RX+ai8ajIW7
      WLv4JRpThjOqNPMrnUtE5HKhOUAi/YJNZ9Nxlr39Jkcj2dx7z21k+nt+n8RiJknpSXFHeH0+
      fC43Udv6klXatNUfYclbb9PiLeC731pI0ud0HomIXEkUgEQSzLYtDu1YxxtLV1NWdR0PzphE
      iv/sW9M049+mbJkmlmVhfKl1WzZ7Ny7nzfc3MHzq17j56iqSfUo/IuIcCkAiCWTbNp+ufpPX
      11Zz813fZXRZHq5z5uekp6Wys70t7thQqJuoy02K94vdxrZtsum9l1mytYk7v4knYM4AACAA
      SURBVP0QQ4sG4NL+PyLiMJoDJJJA9XvX8trqGu596EHGlg+MCz8AxeVlHD9wgG7TPuNTm+ba
      w3hT8kkKfJFl6zaHNy9nybZmvvfw96gszlb4ERFHUgASSRQryPJlHzJl/q2UZaect1hayWhK
      qGH9pzXYp5a8B9tYtWYzI666isAXGLmywm188OFGrr/x6+Slar8fEXEuDYGJJIjZXs/B+hi5
      4Xo2b26M+z6naDAleRm43MnMv2kuz7y+iPbaSRQNCLBz41pCmaO5taqsZwaQbXH00F4a2oIA
      RDuPEwy1smPzZpIAjCRGjhtOtLWRE50mFS01bNly4pwaDfJLKyjITr3IVy4ikngKQCIJYrmT
      mXj1OLpqj9LVy/fu9EJK8jLAMMiruIrv3V/Ali3bOXq8nRHXLGR0ZTmB03v+2LQ21FJd+9lc
      oXFXDaGhuhoAw5XOsHHDcflTmDhuNC31x2mJq9FFILtEAUhEHMGwbdv+48VE5IswTZNwOJzo
      ZoiIJEw4HKa2tpaysrJEN6VXmgMkIiIijqMAJCIiIo6jACQiIiKOowAkIiIijqMAJCIiIo6j
      ZfAiF4HL5cLv9ye6GSIiCWPbNoZh9NtnoQKQyEVgGAZut14uKiLO5XK5+vWzUENgIiIi4jgK
      QCIiIuI4CkAiIiLiOApAIiIi4jgKQCIiIuI4CkAiIiLiOFoGL5Jgtm3R1tRAc1sntuEiM2cg
      A9KTMc4pZ0ZD1J6oJRi1yBiQR05WalyZU2KhTk40dFJQkt/LTW4T6mynoamZcNTE4wuQO3Ag
      yX7vec8nInKlUQASSaDOpqO88/ZbHKjvJj01BcOO0dTSTtV1C5l3zWjcJxNJsOUYLz7/Io1h
      L2nJHpobW6iasZC514zBc0ZqMSPd7N6ynnc/WElDMJe//PtHST+zwmg3yxe/xid7TpCelorb
      7SIWDtLabfK1r3+TScMKLuXli4gkjAKQSMJ08NITz5M7eTaP3jGSlCQ/hm3RUnuA3zz2PKWD
      ShhTnIFtmSx96Wmswmn8YME0krwuWo7t5te/XURuQT6ThuQC0HZsF088+zopRcOZf9McXli0
      Nb5KK0Zy4QgenHkzmakpuF0Glhnl6K61/ObJpyj56z8nP1kj4yJy5VMAEkkYH7c+8AMys5Ix
      jJPdOIabrIIhVJVlcuR4A2OKMwjV7WB9tYc/ufdakn094SSraAQ3Xz+Sdz78mKrym/C5wBPI
      5O7v/ZT8zCQizbt7H87ypTFl4vjP6gPcHh9lo6dTkvwWxxq6yC9Lu/iXLiKSYPqpJ5IwfrIG
      pJwVRgCsSBfHGtvJykgFoGbfPrIrx5CX9NntahgGxRWj6K4/QFfIBCAlu4CCM8NUbwyj1+87
      andTH8mmIDulD65LRKT/Uw+QSD8SDbbyzivP0pYxkqrBeQA0NjWTlzs4rmxySiaGGaIrEiEr
      OekL12VbJp1tTRzcu5MPVm1gxm3foiBVv4lExBkUgET6BZvG6l28+PxLGCWT+d69c0j19oQR
      0zQJ+ANxR3i8XnxuN6Ztf+Ha1rz5BEs+3k8kHMKdVsDd99xD1eCBWgUmIo6hACSSYFYszKaV
      b/Pmih1ct/BuZk6oxOP6LIoYhkEkGo07zjRNYqb5pULL1AX3MumGGF1tzezd8ykrX3mcnWNm
      c+cNU/C6FINE5MqnACSSQLYVYcXrT7L6MDzwo58xKC89rsyArEw21jfFfR7sbifm9pHq833h
      et0eD26PB19eIVPyCpk4cSK//vf/w7qycq4bOfDLXIqIyGVFA/4iCXRww7t8uN/i4e/f12v4
      ASgdWkH93l20Rs4c6rKpO7KXQGYpKYGv/jvGnZTF6MEFHDtR+5XPJSJyOVAAEkkUs5P331vL
      zJtvY2B6/ByfU1IKR1OZ2siKj3dhncxAkY46ln6wmYnTJuNzX3iVLccPsu9oI9Y584aiXY1s
      23+c4sL8L3MlIiKXHQ2BiSRIrLWOw00x0vZ/zNuH4n+LlI2cxOjyPAyXn5vvvpvfPvECjx2o
      pHBAgN1bN5FXNY9rRhf3zAGyTXZuXMuhuvaec3c30N5Zy3tvv40fMFxpzJx/HWa4nVef+T1W
      ci5DB5eS5HMT6mxj187dVFyzkKmVeZf0byAikiiGbX+JJSQi8pXFulvYsGUH4ajV6/dFFWOo
      KBpw+v/RUDu7Pt1Fa3eUwkGVDCnJ/WwCtG1yYOcWjjZ29noulyuVidMnkATYVoy6o4c5fLSO
      cNTEn5xGReVwstOS+LwthEREvohgMEh1dTWVlZWJbkqvFIBERESkz/X3AKQ5QCIiIuI4CkAi
      IiLiOApAIiIi4jgKQCIiIuI4CkAiIiLiONoHSOQiME2TSCSS6GaIiCRMOBzGsiyCwWCim9Ir
      BSCRi0Q7TIiIk516BvbXZ6GGwERERMRxFIBERETEcRSARERExHEUgERERMRxFIBERETEcRSA
      RERExHG0DF4kwWzbpK7mMMfqmrEMN/mlgynOy8Q4p1ws1Mm+vfvoCJvkFZVTVpgdV+aUSFcz
      ew81UTl6KN7Pq9yKsG/XTpo7XYyZNIZk1/nOKCJyZVEAEkkYm6aje3nzzbdps9MpL83HZYVZ
      +d4SiqrmcPsNk/G6DLBtOuoP8NQzrxDIG8TAzABrP1hGwZhZ3HrDFPwnQ4tt20S629i47kNW
      frSZqLuUn35eALJtju/ZwNuL11DbaFE2YRTJLvclu3oRkURSABJJmA6WvbWKMbPvZEJlyene
      nOicBn77y9+yfXgFV5VnY1sR3n75ZUqn3sKN00bgMiAycwpPPPZ71pcWc+2oYgygtWYHz7z+
      AYNGTeLBB+7kiSc//tzaI91NvLN8A3Nvms8rz71z0a9WRKQ/0RwgkYRJ4uZ77z0r/AB4kwcw
      tDCLhuY2ALqOf8q+zgFMnzScUyNUvrSBzLmuii3rNxOxej5LHlDCfQ89wsLZV5Me+GO/bSw2
      rVhMyrBrqSxM7/MrExHp7xSARBLGS0qKv5e5Pm0crG0jLzsTgGOHD5NbMZxM35klDfJKKgi1
      1dAdigHgT80kI9l3QTW3HtnG2kM2c6dXoUEvEXEiBSCRfsK2bcId9Sx66vd4yqYysjQLgJaW
      NgZkZcWVT0pKw21G6IpEv1g9kXZef/1dZt58C5kBxR8RcSbNARLpBywzyuGdG3j9reUMmrKA
      u64fj+dkh49t23i98T07bo8Hj8uDxYW/aNC2TTauWIwx5FrGl2T0VfNFRC47CkAiCRYLtbNi
      6RtsPtzF3DsfYOyQfIwzRrtcLhfhSDj+uGiUqBXDbVzo0nWblpqdrN3bzTfvn4hxwceJiFx5
      FIBEEsiOdbN40VPUUML9D95JTlogrkx2diafHG2K+zzY3Y7tDpDiu7B5P1gR1q1YTm19O8/9
      9pefhaxYmPbuRp75r/8kM6uEu755G+mfu3mQiMjlTwFIJIF2rV3Knu48Hrn/RtL8vd+OxRXD
      aF3xAU2hGWQHTk3bszlxaA9JOYNI8V/gPB7Dy8xbv8PVMevszzuO8/PH3mbhN79Fns9Pip4K
      IuIAmgQtkijRVlat2cGsG+efN/wA+HOGMa4wyrIVGwhHTWzbpq3uAEtX72baNRPxXOhdbLhI
      Sc9kwIABZ//LTMdleMgYMICszHTcGhkTEQfQbz2RBIm2NVHbGWXzijfY3csrKIZNmMmk4UUY
      Lg+zb72LV196lcd/t520ZA+NdQ2MvG4hYwfl9Cyjt2JsXLWM3UdbADDD7bS21/Pqs8/iBQxX
      Jgu/eSNpl/QKRUT6L8O27QtfQiIiF8Q0TcLh+InLZ7Ii3RypOca5I1KnZOQWkpeZ8tk5oyFq
      j5+gO2KSkTOQ3Ky0z/YQsi0aThyltet8dfoYNLSs99dixEIcqq6nsLwEvyZGi0gfCYfD1NbW
      UlZWluim9EoBSOQiuJAAJCJyJevvAUhzgERERMRxFIBERETEcRSARERExHEUgERERMRxFIBE
      RETEcbQPkMhF4Ha7SU5OTnQzREQSxjAMXC5Xv30WqgdIREREHEcBSERERBxHAUhEREQcRwFI
      REREHEcBSERERBxHAUhEREQcRwFIREREHEf7AIkklE042MWB3ds5UF2PZbgpqxzDyCHF+Dzu
      z0rZNp0tJ9i0YSst3VGKKkZRNXzQWWVOl7VMWuqOsGV3A9Oun0LgnO+t7ibe+WANoYh51uce
      XxrXzZ1DhvdiXKeISP+iACSSMCYHNq/h9XdWkZI/hBEVJXjMEGv+8DSr8sbxwDcXkOJ1gW1T
      t+8Tfvv8UoaOm0JxTgYbl73ARxvH8t1vLiDN1xOCbCtGw7FDrPpwBbsP1dAdK2BiLwGove4Q
      a7bs58ZZV5/1ucuThNe4RJcuIpJgCkAiCdPJpi1HWXjPwwwtzuFU9pgyeQKP//w/2HxgItcO
      z8eKdfL6K39g0o3387UJg3EZMPmqMTz961+wcvNwFkwZigE0HtjMove2UDX5GmbNtvj5r1b1
      WmtzYz05xSOYOvVqDAUeEXEozQESSZhUbvn2XWeFHwBPII3SvAxa2zsBaD+ylWq7lGvGleM6
      WdCbnMWsmZPY8ckGQidHsrJKR/Pgg/czfcJIkn3xQ2OnNDfUk5k78CJdk4jI5UEBSCRh3Ph8
      Hs7thAm1HWf7kRZKC3IBqDl0hKJhlaR6zixpkFM0hEjHcbqDUQA8/iSSfH+sU9eioaGenLwc
      4ioWEXEQDYGJ9BO2bdFQvYvnnn2ZQdMWMqokA4DWtg6yMjLjyicFUvFaMTqjUbK5wJnLdojG
      hi7qPn6Xll0+DJebjOx8Ro4aRVlRHh6XUpGIOIMCkEg/EIt0sXHlOyxbu4tpC77JzAnDOGMN
      GB5P/K3qcrtwuc4/1NU7P7Nu/zbNnWEALDNKXfUBXvjdLyifeAN3LpimidAi4ggKQCIJFmmv
      Y9Gzz3DCzuWe7/+AQQMzz5qc7PF4CIaCccdFIxEilonni8xkNtwUlQ+j6MzPxo1n2rQJ/J9/
      +w07q8ZQVZz2pa9FRORyoTlAIglkhVt58te/JJg7nh889G3K87Mwzgk0eXnZnKitxbbPPrar
      sxk8yaT6/V+xFQapOeUML0mh+lj9VzyXiMjlQQFIJGFsPlq8iLacSXz39lmknGflVumIsXTv
      30pNR/SzI22LAzu2kFkygpTAhd/GlhkjFjPjPrfNMM1t3WRmpH/xyxARuQwpAIkkSriJtRuP
      8LX513/uvBtPZjnTR6Xx5pvLaOkMYVsmNbvWs/ST48yaMRHPFxgB66g/yHPPLWLngRpCkRjY
      NsGOFtYsXsRx9xCqhuR89esSEbkMGLZ9bse6iFwKkfq9/O0//YLk3IH4epnHc9WcO5k7cUhP
      2c4mlr75GjuPNGADLm8y0+fdytRRZT17A1lR3n/tGT7ZVweAFQtyvLadguKBuAGXO4/v//kD
      pEVD7NnyESs/2kp7dxDLBtuG9LxB3PL1hRQPSLl0fwARuaIFg0Gqq6uprKxMdFN6pQAkkiC2
      GaWtoxPL6v0WDCSnkRz4bHm7Zcbo6uokatoEklJICvg+28rHtunu6ujp1emFYXhIz0o/vbLM
      jIbp7OrGtMDt8ZKSkozHrQ5hEek7/T0AaRWYSIIYbi+ZmVkXXN7l9pCWHr8fUM/JDJJT00m+
      wHO5vX4yMr/q5GkRkcuXfvKJiIiI4ygAiYiIiOMoAImIiIjjKACJiIiI42gStMhFYNs2WmAp
      Ik526hloWVaCW9I7BSCRi8CyLMLhcKKbISKSMOFwGMuyCIVCiW5KrzQEJiIiIo6jACQiIiKO
      owAkIiIijqMAJCIiIo6jACQiIiKOowAkIiIijqMAJCIiIo6jfYBEEsqmteE4O7Zt5fCxBkzc
      lAwdxYSqUWQk+z4rZZnUHtnDx59spTUYpbB8BFMmVp1V5hQrGuLQ3h1s39/ODbfMIqm3Wq0o
      h/bsYPPWnXSEYqRl5zOmahwVpQP1q0hEHEEBSCRhomxZ8Q7Ltxxi2KgqJk8bjtsKse2T1Tyx
      Yx/333c7GX432DZHtq9i0bvbuHrGTMYOCLDj4xU8sfsg37n3drKSem5jKxbh0O6trFzzCREs
      GpuTmXULcQHINkN8+NZLbK8zuObqiWSl+mitP8rG9VspK52L/9L/IURELjkFIJGECVLfHuC+
      Bx8iOy0J4+Sn5eXlLPrtL9h2oJbpI4uwom0sXrKSGbc/wuSKPAwDykqKePOZx/hw4z5uuXYE
      BtB4YDOrP61j+oI7KAg081+/XdtrrYe3rmRjXYBHv3sbyT73yUoHUzXRPN0GEZErnXq7RRIm
      ja8tnH1W+AEwPF4GpCUTCkcBaD64lZbUSsZX5GKcLOj2JXP1NZM5uG0zwVjP+3Zyh03mvrsW
      UlGSh8fde5SxY12sW7uD6+fNIcnrPus7l9utACQijqEAJJIwBoZhxIWO1uP72H6sm8HFeQAc
      P3qCwkGD8BlnxSQycoowQ410h3qCkmH0nO/zhFrrOW4mMzgnle6OFo4fO8rRY8dp6wrq5a0i
      4igaAhPpJ2wrxuFP1/PakjVMmHsb5bnJAHR1d5OekRZX3u9PwgsEYzEgfjJ0b4Ld7ZjBLt55
      7XnaQ1Fctk0sGqajO8qkWQuZPn6IfhWJiCMoAIn0A9FgGysWv86mI13ceNd3GFmW91kQscHl
      cscdYxgGLsPgi/TbxGJholGDUVNnMagwl5SAD9uK0VC9m98/+wI5eT9hVFF82BIRudLox55I
      gnU2HOLxX/2KGruAhx95iFFlubjOGMny+bx0dXfFHReJRIhYFj7Xhd/GPn8qgYw0yooLSU3y
      94Qot5eB5aOZPiafbbsO9MUliYj0ewpAIgkUaT/B7594nqKJC7jvtrlkJvvi5vEMzM/jxPHj
      mOd09XS2N2D40knxX9jwF0BKWiau7jYau0LnfGOQnpZKJBL5klciInJ5UQASSRiLde+8QdKw
      GSy4dgye89yN+UNHw7FPOdwUPP2ZbcXYs20LOeUjSPZd+G3sTctlZLGfNZ/sPmfSs8XR4/UM
      zMv9ktciInJ5UQASSZRgI5t2NTF9xkTOs2odAHdKATMnFPGH1//AieZOLCvK7k+Ws2pPN9df
      PfZzj41jeLlmzjzqNi7mvfW7CEZNzGiQ7WuWsq0xiUmjSr/yZYmIXA4MW2tfRfqcaZqEw+HP
      LRNu2M+//ufvCOPtdf+dKfO/zYKpw3rOFw2ycdV7rFq/jY5QjNziCubOX0BFYVbP3kBWlHde
      fJy1u0/0HGxbhMIxAoGe4TG3J58f/82jZAHYNh31h1n8zrvsO3QC0+WldMhI5t14AwUZvb04
      Q0TkiwuHw9TW1lJWVpbopvRKAUjkIriQACQiciXr7wFIQ2AiIiLiOApAIiIi4jgKQCIiIuI4
      CkAiIiLiOApAIiIi4jgXvAosGo3S2dl5sdsjckWwLItoNJroZoiIJEwsFqO+vh6/35/opvTq
      gl+GGgwGOXBA7wkSERGRC+P1eklL658vWL7gHiDbttGWQSIiInIhQqEQNTU1VFZWJropvbrg
      HiDDMOJe0igiIiLSm/6eGTQJWkRERBxHAUhEREQcRwFIREREHOeC5wBdKNuKcXj3FpavWMWJ
      liB5ZcOZd8NsSnMz+roqERERkS+lb98Gb0VY9tx/8k+/fIkBg4aTm+al5sAeIqmD+If//W9M
      rcjps6pErhS2bdHScIKG5g5sw8WAvEJys1I5d/qgGQlytOYo3VGTzJxC8nPS48qcEg22c7S2
      nZLy4rN+5YQ6mjh8tJ7eb3qDnMJScjOS++KyRMThgsEg1dXVl/8qsAtRt3sN//7YIsZ9/Sf8
      7aO3k5Hkoe7AJv7bz/6Mf/v/fsFj//dvyfT1ZY0il7eOhiO8/eabHGmJkZ2VicuOcKK2gVHX
      LmThjCrcJxNOd3MNzz7zPB2kkZnqpfb4CUZdu5AFM8bhPSMFmZEudmxYy7IPVtEaLeAv//5R
      0s+or6vlBJ989AmxuJaY7N66jTnf/XO+Nk4BSESufH0agHZt/oj6riT+7p7byUzp2fkxf+hE
      Hv3WDfzpL1eyYW8tc0bn92WVIpexdl568mWKrr2BW8YPI+DzAjYdDYf51S+fYsfgMqpKM7Gt
      GItffBr/4Ou5b95kfG4X7XX7+dWvn2FgYQFThg3EAFqPfsrvnnmDrPKx3H7nTTz97Ma4GrNL
      R3Pv/aPjPu84spF/PNzBhBFFF/+yRUT6gT6dBB2NRLBx4TqrX95g3LRr8YWa+XTvkb6sTuQy
      F+C2hx5l7tTRJPl9J/facpGeW8aYsixqahsBCNZuZ+PxAPPnTMHvcWMYBhn5FSycNYY1qz4m
      avWczZeSwz2P/gn3330TRdlp5x0ei2PHWL7sXa6aNY8Bfq2LEBFn6NOnXeWYq8j0d/DME8/T
      0NaNbdtEQp3UNLeTgkVjc0tfVidymfORmZncy1yfTqrr28nO7Nk+vmb/fnIqR5MbOPN2NSga
      MpJgw0G6Qj0DWslZA8nLSPrCrWg7tpNNxz3MnDzsS16HiMjlp0+HwErGzeahu9bx78/9kvs/
      XsyAtADRSDcN9Q209WVFIleoaHcLby16mmDOWMYOzgWgsbGZvJyKuLLJKZm4zDCdkShZyV/y
      VrajrF/5IYMnzSQnoN4fEXGOPg1AhieZu374d4yfcSMfrtlIt2lQWD6S8fldfOfR/0nOgKy+
      rE7kCmJTf3gHzz37EklDp/PQrdeT4ukJJJZl9fo2ZY/Hg9ftxvoKCzk7Gw6zfn8X9/5oVL/f
      tl5EpC/1+T5ALo+fynHXUDnumtOfffzi/ybqz2R4RUlfVydy2bOiQT5+/00Wr9vHnK9/h+lV
      g3GdEUYMw0UkGok7zozFiJrmhc/1OYdtx9i0cjl5Y6ZTlPXFh85ERC5nfRyATCJhG6/Pw6nn
      d7D5ME++9A6FQydy1TCtABM5k22Gee+VJ/ikNsD3fvwzSnNS48pkD8hkQ21T3Ofd3R2Ybh+p
      vi+3t0So9RjrdjXx9e9/ttxeRMQp+jgAtfEff/2P+EZcxcjyAiLttbz9yktsbfLz1//9kXMm
      cYrIvvXvsLbayw9/8G1yU+OHuQBKhw6lYeUaWiKzyPKdSio2tUf2kDSgjJSkL3cbf7p2OUlD
      JjE4Lz50iYhc6fo4AAUYUlHAC28+xbMnGsGbwujxV/OP/+1hplcN6tuqRC53ZgcfvP8x19/x
      J+cNPwDJBaMYkfEHlq/dwddnjMFlQLj9BEuWb2bSzQ/i+xK/K+xwE8s/2s+8h+/Ao94fEXGg
      vn0VBmDbNqYZw7JswMDtceMyDE2wFDlHrHE/f/O/fsPIaVNJdcXfH4PHXk3VkHywbTrqDvD4
      E8/hzS2nIMvP3h3bKZ28kLvmTcJjGGDH2P7xKvafaAXADDaxbsMRJk+/Ch/gcmUw55ZZpABg
      s/3951lyJIM/u/9GeqlaROQr6++vwujzACQiF8YMtrFlxy4isd5vwfxBwykv+GzlZDTUyb49
      e2kLRskvrWBQYfZnE6Btk8N7PuVES1ev5zKMZMZNrSIAgMXBnVvw5g2jpJc5RyIifUEBSERE
      RBynvwcgzUoWERERx/n/27vP6DjOA833/+qMnAiAyCBIAsw5BzFJjCJpBSvbVnKQZI9n58zO
      7N5z91zPuWdm7+6c3dnx2KOxLStSmZIoUZGiJFIMohjEnAkGkCByDt3Voep+YCZAmZIINch+
      ft/Q9VbV++KcrvP0m0oBSERERGKOApCIiIjEHAUgERERiTkKQCIiIhJzrvm7wEQEIpEIpmlG
      uxoiIlETDAaxLIvOzs5oV6Vb6gESERGRa66377KjACQiIiIxRwFIREREYo4CkIiIiMQcBSAR
      ERGJOQpAIiIiEnMUgERERCTmaB8gkSizrQhVFUeoON2AZTjJ61dKYd80jMvKhQKtHNh3kNZA
      mL6FAyjJz+xS5hyzvYH9R+oYMmoQnm6OR4IdHNp/gMa2AJ6EZAaWlpKS4L3i9UREbjQKQCJR
      Y1N7bB9vv/sBfncGA4pzcVgmmz9fTcaQmdy9aAoehwG2TUvVIZ598U1S8svISfPy/st/Im3Q
      Tdy5cCo+55nYYtsW/tYGtmz8nI3bdhN2FlJyeQCybaqObOPF11eRPWAw2akJ1FcdZ9W7K5ly
      693MHNUfQylIRGKAApBI1LTx2eotjF9wHyMH5J7vfZkzcypPP/kndg0tY1xJH2wrwHtvvsnA
      abczf1IZDgNmTRvPc089w6Z9RcwYXoABNFXs4eWV6ykZPp6fPTKIPz/7ZZc7hjvreHPFaqbd
      +RATB+acDzuzTu/lt398jZKSv6Uoxf29/QdERKJFc4BEoiaexfdfGn4A3HGp9M9JpaGpFYD2
      yn2Ud2YydVwpjrMFPYmZzJk+il1bthOMnPkssU8xP3rkURbMGE+it/vfNsHODjrcyQwqyLyk
      pyc5dxA5iR3UN/XOLetFRK41BSCRqHERH+/pMu8m7G/mSFUz2X3SAKg8fpysAWWkuC8uaZCV
      3x+z5RSdZhgAT0IyyXHdzfi5wJecQb4vxI7DlZdsU19/9Ctq7VyKspOuRcNERHo9DYGJ9BK2
      beNvrmL5yy8RP3A6QwtSAWhubiUtraxLeV98Ii4rSEcwRFr81X2VHd4kbrv7h7z3zkr+vCuN
      /MwUOhpPU9licNePHyAjTr+JRCQ2KACJ9AJWOMiR3ZtY+dEGSqcsYuH0EZyd24xt27hdXefl
      OJ0unA4XFt/shYOmGcBweUlKSCQxMREjmEJyKEDAr7fXi0jsUAASibKwv5nV761gb1WY+Xc/
      zJDirEvm5zidDkwz0PW8UIiQFcb1DZZtmS3VvPb6u0y49V5GFvfBOHtuW91RnnnuBXw/eYz+
      mXHfuU0iIr2d+rtFosgOd/DOy89x3MzkoYd/xNB+2edDyTnp6WnUNTR0ObezswXb6SPB8/Xz
      fi5Wc3wv/vgiBhf1ueQ+SZkljCyKZ/ve8m/fGBGR64gCkEjU2OxZ9z7HGV7I5gAAIABJREFU
      Ivn8+K75pCd4uy1VUFpKy5G91PmtC2faNqfLDxCfWUK8z/mN7hqJhLEvHzWzbULh8DdtgIjI
      dUsBSCRaQi2s/2I/sxfOI9595RDjSS9lbKHNR598gT8YxrYtmk4f5MMNh5k2bRzub7BxYd+S
      YcS1HWHD9kOYoTC2bRMJBTl5cDNbjnQwelj/a9AwEZHez7DtLr8FReQ7ikQimObXTyoO1Zfz
      T//yDNn9++NzdE0xgybczKQh+QAEWqp5+823qAs4SPC6aG5uZcT0Rcw6tzeQFWbzZ++z72Tj
      mfsH2zhytJ6SQf1wA4Yjjdt/vJQkoKnyICveWUWn4SXe6yYcDNAedDBr4VJG9e97jf8TIhKr
      TNOkurqaoqKiaFelWwpAIj3gagKQFfJTWVVDxOr+eFJ6FhnJ8ReuGTKpq60lELJISutDekrC
      hT2EbIvG2mpa/cEr3M1NXnEe59aSWWGT2ppaAqEITpeXjMxM4rwuvQtMRK4ZBSCRGHQ1AUhE
      5EbW2wOQ5gCJiIhIzFEAEhERkZijACQiIiIxRwFIREREYo4CkIiIiMQcvQtMpAc4nU7i4+P/
      ckERkRuUYRg4HI5e+yxUD5CIiIjEHAUgERERiTkKQCIiIhJzFIBEREQk5igAiYiISMxRABIR
      EZGYowAkIiIiMUf7AIlElY2/vYVDe3dRfrKGiOGiuGw4w0r7EedxXihlW7TUnWLLlh00dYbI
      HzCU0UMHEOfp+hW2IyHqKo+y40A9N82diu/y47ZFS10lW7dup7EjSJ+8EsaOGkpynBfD6OHm
      ioj0EuoBEomaCAc3f8rvfvckW4/UkVNQTFFuBts/Wc4flq2kPWSdKWbbVB3YxO/+43naHIn0
      K8pl/7oV/HHZSlrNyPmr2ZEwp4/t49UX/szTL77C2g27CF5+SzvCgS8/4vdPvUzQl06/onzq
      Dm7kX3//HLXt5vfWchGRaFMPkEjUtLPnQAO3P/hzSvqmc67zZczokTzzb79l+5GJTB+cgxVu
      Y8Wb7zNp8U+ZM6oIw4DRwwex7I//zpqvhrJ4cikGUFf+FW+t2cvYSbNZkBXkX59c1/WOdUd5
      59M93P3IL+iflYxhwLixY/hs+VO8vHIdv77vZtQJJCKxQD1AIlGTxJJ777gk/AC4vInkZybT
      0tYBQMuxnZxyFjN5ROH5ISpXXCqzZk5g39atBMJnPssoHsmjD/2YSSNK8bmddKeqfC++/BEU
      ZyWdv5bh9HDT/Hk07NhAZbvVQ20VEeldFIBEosaB2+3s0uPS0XiSnSeaKc7LAqDi+AnyB5aR
      4Ly4pEGfnBJC7afpCJwZ6HJ6vHivEHzOCQWDuHw+HJfd1ZXcj6KMTk6ebvqujRIRuS4oAIn0
      ErYdoap8J3/4j+cpvekHDM5LBqC1tZ3UlJQu5X1xCbgti45Q+KrvkVXQj8byXdS2BrAvubdN
      QkICHX7/d22GiMh1QXOARHqBsNnOl5++z6dby7lp8QNMG1nCRWvAcDm7flUdDgcOxzf7DZNR
      NJxpZbv40x+eYuaMSaTEuelormPfgSNUnG4n0/7L1xARuREoAIlEmdlSxUvPP0+jp4Cf/OIJ
      CvokXbIc3eVy0dlNz0woGCRoRXA5rn7asuH0MWPJA5SU72fzV/s4YUF63wJuvvV2PnnlX4mL
      u3zRvIjIjUkBSCSKIoFGnn7ySeIG38ITi6bic3Xt0cnOzmTNvipsm0uCUXtbA4YrkUSv9xvd
      0+HyUlQ2iqKyUec/s4N11NY7mZ2T9q3bIiJyPdEcIJGosfjivdcI5E7hgSXTuw0/AAWDhxM4
      uoOKlgu7+th2hCO7t5NaNJgE73f9Gtsc3rwOSsZRkPz1k6hFRG4UCkAi0WI28MVXp7h53gxc
      XzOK5UopZsaIdN5e8QH1bX5sK8zx3RtZ9VUNc24a+7XndhWm4shhaptasWybSCjAoa/Wsfyz
      gyxdNAvFHxGJFYZt25r2KBIFZu1B/p//79/xpGZ0OxY9fv69LJgwEIBQZxOr33ub7QdPErZs
      vAnpzFr4A8YNysdhAFaIVa8/w6aD1QDYEZPa+nYyszNwAE5XNo//Xz8njTBbPn6HdTsP0+E3
      MQwnSRm5zFmwiKFFmRh6F4aIXCN+v5+KigrKysqiXZVuKQCJRIlthen0B7jSN9Dt8eG96F1f
      thUhEAgQsWzcHh8ej+vCbj62jRnwE4pcaSNDB/GJ8Tg48y6woGkSCkfAMPB6fbhcXfcjEhH5
      Lnp7ANIkaJEoMRwuEhISv0F5J3HxCVc4aOCNi+dqpkMbhgOvL+6qyoqI3Kg0B0hERERijgKQ
      iIiIxBwFIBEREYk5CkAiIiISczQJWqQH2LaNZV1pRZaIyI3v3CLzSCQS5Zp0TwFIpAdYloVp
      mtGuhohI1Jim2aufhRoCExERkZijACQiIiIxRwFIREREYo4CkIiIiMQcBSARERGJOQpAIiIi
      EnMUgERERCTmaB8gkaiyaayuYOeOHRyvrCOCk4KBQ5kwZiRpiRfe125bESrL9/DF5p00+0Pk
      9hvClIljLikDNh0t9ezfvZN9hyswIzZ9cooZN34c+ZkpGMaFkm0Np9m4fj0na1tISM9h4uTJ
      9MtJx7i4kIjIDUw9QCJRE2Lb6hU888pKTF8WM2+ex9zZ0whV7eaZZW/SHDi7e6ptc2zHZ7z4
      zjoKho5n/tzZOBr28cwLb9DYGTp7LYsTezbx56eXcbTRYvKMOSyYO4dMdysvPvscx+o7zt+1
      o/4oz/z5BcykIubOn0dptovXnv0zeytbv/9/gYhIlKgHSCRq/DSbaTz8s4Wkxns51/eSX1BA
      51O/Z2d5FTOG5mMFm3j/o43cfPcTjOmXgWFAXs59hF/6E2u2HuK26UMxDIvGJpPF9z1EUVYK
      jrM9OXkFhbjDy1i3eS8liyaAHWLjqg9JH3Ezt84ag8MwKMzPJ9kZ4o2VH1P6izvxqBNIRGKA
      eoBEoiaZOYtmknZR+AEwnC6SE+IIhsIANJTvoiVlMMPPhh8AhzuOCVPGc3z3DjrDNuBi9PSZ
      9MtOPR9+AAzDIDk5mZAZBCDUWseuUwFumjTkQjnDwcDx04mv38vx+uD30G4RkehTABLpZRpP
      7mfP6QAD8rMAqKqsIq+osEvPTHJ6LhGzAb8Z6uYqZ/ibq9iw9SCDBg8AoL21AeJSSY/3XlrQ
      lUputpeq2oZr2hYRkd5KQ2AivYRthTmycyMrVm1m8oI7KeoTD0CH309SSnKX8l5vHG7AHw4D
      nkuvZdvUVexjxdsfkjZ4JhNKz4SpUMiPx52Iy9n1t09KYjKdnf5r3i4Rkd5IAUikFwh2NvPJ
      yuXsqgyz9P6HKctLvzAsZoPD0TWwGIaBwzCwLz9gh9i+5j0+2HiYm269ncnD+p0PPLZtYzic
      3dbB6XAQvmYtEhHp3RSARKKsteowz7+4nOQBE3niiZtI8DgvWbLu8bhp72jvcl4waGJaFt6L
      Ak2wvZ63X3uJykgmDz/xS/qm+C5Z2u5yeQgG24lEbHBeOqbW2tFGssd97RsoItILaQ6QSBSZ
      zad49vnX6T91KfctnU2i19VlL56+OdlUnz5N5LKunraWWhyeFOJ9Z0JLxGzl3ddfpjV5CD9/
      6G5yUuO6XCshKQMr0EKbedlkZ6uTmroOsrMyrnkbRUR6IwUgkaiJsOGjd0gaMou5k4bgusLy
      8+yBwzBO7+Vofef5z2wrzIGdO8jqP4R4twOwObZzA8eCmfxw8SziXN1/tX2pWQxItdi2/xT2
      RYGq9sh26t1FFGXFX8P2iYj0XgpAItHir2fHgWamTR97+WjUJZzxfZk9oYiVb66gsqENKxJi
      z6ZVrD9sMmvy8DPnRkLs3n2Q4eMnkuTtfo4PAA4f0+bcxM7Vb7Gj/DQRy6L2xF5eeWMtMxbO
      I/FrThURuZEYtm13mUMpIt9NJBLBNM2vLWPWl/N//uM5OkPdp5+JC+5n4aRSAKywyc4vPmXN
      F9tp8YfoWzSYeQvmUZx15hUXVsjPS3/4XxysDeHo5nJ9h07nsbtuBs5MhK45upt3P1hNZX0r
      cWnZTJs1j0nD+12yh5CIyHdhmibV1dUUFRVFuyrdUgAS6QFXE4BERG5kvT0AaQhMREREYo4C
      kIiIiMQcBSARERGJOQpAIiIiEnMUgERERCTm6FUYIj3AMAycTm2qIyKx69wzsLc+CxWARHqA
      w+HA6/VGuxoiIlFjWVavfhZqCExERERijgKQiIiIxBwFIBEREYk5CkAiIiIScxSAREREJOYo
      AImIiEjMUQASERGRmKN9gESiyqbiwHY+3/AF5RW1WIaTorKRzJ17M/kZCRdKRULs2bKGj9ds
      pqkzRP7A4SxaOP+SMmDTVHWM9evWsevAMcywTZ/8/syccwvDS3IwjEvv3Fx9jNWrPiKcM4F7
      bhnz/TRXRKSXUAASiZoAq158li01cMvNt7D03kJclp9t6z7ij08+xeO/fpy+SW5s22bnZ8t5
      e3sL9z7wMwozfGxf+y5//Pen+Nmvfk5+qg+w2LvuPd5Yu48JN83hsfl3Eu+2ObpnM68/+wes
      n/6aUYVpALTVVfDJqo/YfbKd3KQQwaRAVP8LIiLR4PzNb37zm2hXQiQ2+alrieOOH95KUU4f
      vG4Xbk8cBf3LaNy3jqa4QgbkpBLpqOKZF97n9kceY3BeGi63l/ySQUROb2V7tYuRpfkYRoT6
      +nZmLFrKyNJC4rweXG4PmXn9SA5VsOlokPFDiwDYuWkNnvzR3HPnrcR1nuREIJXxgwui/L8Q
      kRtNOBympaWFPn36RLsq3VIPkEjUJDFpevdDTw6H8/yQVc3hnYRzRlKWk3T+uOFwM3LCBDav
      2EXHvAkkeVwMGTu+myvZZ67FhfGvCXOWXstGiIhclzQJWqSXObl3I7tqYEhJDgCnK6vJKyzA
      ddkcnqS0HCyziY5A8IrXaqk6xKqNhxkzZnBPVllE5LqjHiCRXsEmEjLZ+unbrNx4jLseepS8
      lDMvEAwETJLSk7qc4fX68DoMzEik69WsCEd3reflFWsYM+8uxpZk9HgLRESuJwpAIlFm2zbN
      1Ud56/XXaXTl8cTf/DU5Kb6LS2BjX+Hcrp+ZHY2sfvtVNh8zufPBxxhWnIXRtZiISExTABKJ
      stMHNvHs6x8zdNoC7p0+hji385Lj8XFxtLa1dTnPDPgJYuNzXijfVlPO8y+8gid/NL/+65tJ
      T/D0eP1FRK5HmgMkEkXt1fv580urmHHbT1gya3yX8AOQX5BH5fEThC7r7WlpPI3Tm0FC3JmQ
      E+yo59Vlr5A+7GZ+8sMFCj8iIl9DAUgkWuwwq995i37TlzJ1WBGOK4xT9SkdRXzdbvadajk/
      5GVHgnz1xZcUDBtFvMsA2+bAptU0JA3iBzePx+PUoJeIyNfREJhIlNjtVew40sltC/Npamrs
      ctwXn0S8z43T24elCybyyrJnsW5fSmFGHNs/f49t9ck8fucIHAbYYZNde44waOxS/K3N+C+7
      lsvjIzkxHtsK09raRsQ6k6TaOk2CgQ4aGxvPlosjOTGup5suIhJ1hm13N41SRHpasOE4f3rh
      NdoCVrfHx9z8Q+aO6w+AbYU5snszn63bTGNHkIKBI5kzezp9U+MBsEIB3lr2JIdrzG6vlTVo
      Eg//YCah1mqef2EZdW3h7ssNnsLDS2+6Bq0TkVjn9/upqKigrKws2lXplgKQiIiIXHO9PQBp
      DpCIiIjEHAUgERERiTkKQCIiIhJzFIBEREQk5igAiYiISMy56lVgpmlSX1/f0/URERGRG0A4
      HKaurg6Ho3f2tVz1RoihUIiGhoaerIuIiIjcIGzbxuPxkJGREe2qdOuqe4AikQim2f0mayIi
      IiIXM02T6upqioqKol2VbvXOfikRERGRHqQAJCIiIjFHAUhERERijgKQiIiIxJyrXgX2zdnU
      ndjPhkONLJo9Bbfzyllr/9bP2Hu8AWdcCrNmzyY1ztlz1RIREZGY1yMBqLX6MP/+L/+Tp195
      l9MZE6nauPyKAchfs4tf/Oh+tla0kJA/jNWfrSE1Lq4nqiUiIiIC9EAAeu+P/5VH/v73hLzJ
      JDhCfN0ie9sK8vz//keO+Sbyj7/w8U/vHr3W1RHp1cJBP/u++oJNW3dS3dCKjUFGbj9mz53P
      4MJMDONMuYjZzhdrPmTD1v10hizSsouYu3ARgwozcRgXrmdbEVrqK1n/2SfsOmHzy797mOSL
      7ld1YCN/fvkjQt3UpbO9k1vue4K5Y4t7sMUiIr3DNQ9Ahw8dYeodP+dv/uoR1v7r4/zjV1cu
      e2rHR/z2lY387e9Wkr7hf1zrqoj0cn4+fOk5qr05zFl6H0W5mTjsIId2bWLFKy+R+NOfUZge
      h21bbF61nO31yTz4xN+QmezlyPbPefPlF/E+/Cj9sxIBCLTW8unHH1Ne3c6QQbk4jtZ1uWPO
      oCn83/8wpcvnwebj/O/fvcagAXk93moRkd7gmgeg+//zb3kisy9uR5B1X1MuYrbw5D//TxLG
      /pAf3TKc9zZc65qI9HY2pRPmMX9QMa7z3Tg+ykZNY8TuPRw8UUNhejHh1grW7qjl7ifuITvV
      B8DA0TOYWX2Kz7/YRfGSKTgN8Lc2kTFwPDNuLcHVUc62zV0D0JXqsX39GrJGTKcgxd0jLRUR
      6W2u+SqwzOwc3Bf3yXfLZt+nL/LCulr+/u9/RapPk54lFsVTOqTfReHnHBszFMbjPvP7pPrI
      flwFQylK850vYTiclA4fSeOJ/XQGLQDS8suYOKKUBO83+10TbK1k/a4aZk0fw1/65oqI3Cii
      sgw+7K/hH/7bPzPujsdZNL5YD12Rs6xImH2bPuJgWxLD+ucAUFNTR05uDpfnpITkPtihNjrM
      4Le/oW2xd/N6EgZMoCjV8x1qLiJyfenBZfBXYvPxU/+ddS3ZvPOfHsL3F3uLRGKBjb+tgc8/
      fIdd1Q7u//E9ZJzdDiIUChOflNDlDI/bg8fhJGhZ3/quwfYaNu44yez7F+Iw9F0UkdjxvQeg
      UP1+/t/fvkokkMw//PK+811QVUd2E6jz81c/uZ0J8x/kv//N3Tj1PJYYYNsWp4/s5J33PiGp
      eBQ/fWQGqfGXzsWJWJEu51m2jWVZGN+2D9W2OLJzM0bfYZRkJX27a4iIXKe+9wAUCdlMvfWH
      jDIvfaCHaso50hghJ6+QvhkpGhaTmFG+bTWvrd7D7FvvYNzgIlyX7ZmVmBBPW1trl/PMgJ+Q
      w0Gc69vNoQubLWzccpCJSx/Cq18bIhJjrm0AsiJ0+P1n9/4xCYYjYIVpb2/HCLtwON3E5Qzl
      n//l37qcuuy/3Mv2t47yX//p/zAiVxshSmxoPL6NVz7cw50PPURZbhrdjULlFxXw9ofHCFgT
      LxoytmmuP4krLot437dbuXVy9xe0JA1kaFGfb98AEZHr1LUNQHV7mDB5Lsdr2i/5eEDRmb1F
      Rsz8Jave+x+os10EsE0++eBjRs+7m0F5aVcsltJvBNmBz9h+qIZJZX0xDIiYHXyxfisDRy0k
      zvXNe2/siJ8167YzZdGj+NT7IyIx6NoGoNR+/PtTy/AHu85XAEhKL+JKfTuzHvw7XpzfSXG6
      VqJIbLDaajlcFWJGnMnhw4e7HE/JzCUrNQGHM5EFC2fyyruv4m+cRl66j72bP6fa3Y8fj+5/
      ZrjYtqirOkVzhwlAqLUSM9jOscOHiQfAQ/HAIs71FVXv30SNp4R7BmR/P40VEellDNv+updV
      XBCJRDBNs6frIxIzQq3VvPvRZ+f38blc6diZjB90pvfUti3qTpWzddtOmjpD5JUMYezIISTF
      nY00Vpht61Zx4FRTt9cyHKksvnfR2d5Xi+2ff4CVM5axA/te+4aJiACmaVJdXU1RUVG0q9It
      BSARERG55np7AIrKRogiIiIi0aQAJCIiIjFHAUhERERijgKQiIiIxBwFIBEREYk5UXgZqsiN
      zzAM3O5vt0OziMiNwLIsDMPA4+md+/spAIn0AMMwcLn09RKR2OV0Onv1s1BDYCIiIhJzFIBE
      REQk5igAiYiISMxRABIREZGYowAkIiIiMUcBSERERGJO71ybJhJDbNvC395Gu98EDOKTkkmI
      82JcVs6KhGhpbiEYtohLTCYpwdelzDmRUICW1gApGak4uzluRcK0tjRjhiI4XR6SU5Jxu5xX
      vJ6IyI1GAUgkivwtdXz+yUfsOVoNhgG2Rch2MWnOYm4aPQDH2URittWy8s03OFLdhsvpIBQx
      mHLLEqaNHojzotRihU2OH9zNJ59+yomGJP7uN4+RfNk92xsqeOetdznd3IlhGNiWhSMujUW3
      3UFZXtr31nYRkWhSABKJmnbeePZ53APH86OHl5CRmoRhh6k6todnX3yF7JxfMzgnCduO8Mmb
      y6jzDOWxX80k2eei6sh2nn7pFVIznmBkUfqZq9Uc5ZXX38b0ZTJp0lgq3z3U5Y6W2cLy55fh
      HTKbX9w/hgSfm7DZycFtn/DCn57j1//lr8j0aWRcRG58etKJRI2L2Xf+hB8umE5WejJOh4HD
      6Sa3/3BGFSRSfrIGgGD9QTYcNFly6xxS4r0YDic5A8ewcEo/1n6+lZB95moWTmYsfYCfPXQf
      w0pyu/1y+5vrqAh4mTdtLIlxnjOv7PAlMGzKAnKcJzla2fr9NV9EJIoUgESixkduXh8cxqUz
      b+xwkLqWDpIT4wE4eXA/KWWjyEu60GFrGA76DRlJa+UBOgIRAJKzixhYkInbeeWvtTchiSSC
      VDa1Y9v2+c/N5kqagklkpSdcywaKiPRaGgIT6UXCZgfr3n+Valcxt/XvC0BdXSPZWcVdyiYk
      pmNE/HSYQVLj4q7q+q7ELO66bRZvrXiFujETKMxKob2hkk2btzNhyf0Up+kFriISGxSARHoF
      m+bqY6x4/XWa4vrz6EOLSfGe6ckJR8LE+boGHLfbjdvhJHxRT85fZpBVNJiy7D1s+HwNh1IT
      8Lc14c4qY8ygQq0CE5GYoQAkEmW2HeHA5k947b0NjJy5mHumj8bnvnTxeigc7nKeFYkQsSLf
      6F6W2cobLzxD3KCZ/O2Sofg8LiIhk2N7N/LUH57h0cd/Rp94jYyLyI1PTzqRKLLtCJs/eJEX
      P97PPT//NUtnje0SftJSU2hqbupyrt/fTtjpJtFz9cNWpw9v45g/k7lTRhLndWMYBi6Pj4Gj
      ZjE0rZV1X3VdOSYiciNSABKJolO7PmPltiZ+/vhPKctLxzC6DkIV9i+h6tAB2sIXD3XZ1J06
      gjc5jwTf1Qcgs6Mdw+PDcfk33zBIjPfR0tb+7RoiInKdUQASiRarg48/XMtNS+6kID3+isUS
      C0ZQ4j7N+q/Ksc5moFBHA6vXbGPkxPF4u9vq+QqyikqJ1B7kSGUTF08d6mysYOv+agYPLP52
      bRERuc5oDpBIlISbayivC5Fef5i1a490OZ43YDgD8tJxOONYcucPeGrZizRUjCE/I449Wzbi
      KpzMTSOLz0xctiOU79vBqfozPTiRjmo6Ouv5Yu1afIDDkci46WNJzB7AHfPH8PIff0vZ6HHk
      ZiTR2VTDtq/2MOim2xhb0ud7/R+IiESLYdtXt4QkEolgmmZP10fkhuBwOPD5fF9bJtxez9qN
      mwmEuv8KFg0Zz7B+WQDYtk2grYEd23fS2BGkYMAwhgzIw3VuLMuOsG/bRo7VdL+RoeFIYuaC
      m4g/d632RnZ8tYPG9gDe+BSGjBhB3/SkLnsSiYh8W36/n4qKCsrKyqJdlW4pAIn0gKsJQCIi
      N7LeHoA0B0hERERijgKQiIiIxBwFIBEREYk5CkAiIiIScxSAREREJOZoHyCRHmBZFoFAINrV
      EBGJmmAw2KufhQpAIj3EsqxoV0FEJGrOPQN767NQQ2AiIiIScxSAREREJOYoAImIiEjMUQAS
      ERGRmKMAJCIiIjFHAUhERERijpbBi0SVTd2po2zfvp3jlXVEcFIwcCiTJ4wlI+nC2+RtK8yJ
      QzvZuGkHzf4Quf2GMH3qhEvKnBMJdnBg1zZ2lXey9O75xF9+RyvEsQO7+HLzDpr8QdL79mPK
      1MkUZKZgGD3cXBGRXkI9QCJRE+TLD5bz7PKPcKYXs3DJbfzg1rm4W47wzHOv0+SPnClm25Rv
      +4RX3/uSsvEzuP0Ht5LQeZSnn3ud+o7Q+atZYZN9Wz/nD0/+iS/3HODo0dOEL7+lHWLzqjdZ
      +fk+Rky7hTtuW0K/FJNlTz/LsYaO763lIiLRpgAkEjUmfmcuv3jsp8yeOo783L7k5Bczd+k9
      FHvq2Fl+GoCI2cj7qzYz7857GTNkAH1z8pmz5B6Gprbw2eYD2PaZq9Uf3cnOUwGWPvAI9y2e
      gbubOzZXHmT9/mbu/9HdDOlfSHbfPCbMWsziibm8ufJTIvb313oRkWhSABKJmiRmzp1KktfN
      JSNPDicJPh/h8JndUxvKd9GePpihhWnnh6gcLh9jJ47j5L6ddIbPpJas0gnc+4O55GUkXXEo
      q7ainOTCIaQleM6XMQwHw6ZMxz6+gxMtXfqMRERuSApAIr1M/fE97KkyGVCQBUDV6SpyCwtx
      XxZqktNziZiNdAZC3Vylew6HA8uKnO81OsfwZpPbx6amtvm7Vl9E5LqgACTSS9hWmANbPuHp
      V1czffGdFGbEAdDpD5CUlNSlvNfrwwMEIlffa5NVOIDW4zupqGvn4gxkR8K43F5M0/yOrRAR
      uT5oFZhIlNm2jdnewKp33uBAvYM7H/wpJdkpF4bFbHB0M6ZlGAYYBt9k2k5STimLph7lpT/+
      nsEjh5Psc9HZ2sjR49WYgQDZWgYmIjFCAUgkyporD/DCyyvIHDKVJ344lQSP85LjXq+H9vb2
      LueZQZOgZeF1OLscuxLDcDJkyiL6DR3H7n3lBC3IKRzIvCUFLP+PfyIpIeE7t0dE5HqgACQS
      RYGmCp5btoKhs29n9vgynN10wPTNyWb11tNEbC453t5cg8OTSoJX77zaAAAMLElEQVTP843v
      G5eSzYTJ2ef/jnScoqolgZv7Jn+bZoiIXHc0B0gkaiKs//Ad0ofPYc4Vwg9A1sDhuKr2Ul57
      YZ8e2wqzb/t2sgcMIf7y2dHfmMXujetIGTyerDgNgYlIbFAAEomWzjp2HGpl6rTROL4mdzjj
      spg9uYS3l79JRV0rViTIzvXvs+FohNlThn/tuV2F2bv1S8or64hYNqFAG1+ufocPdjaxeO4k
      PRBEJGYYtn35gtjuRSIRrRARuYbM+qP8/qlltJzb8fkyExfcz8JJpcCZ11fs3byWT9Ztoakz
      RF7/YcyfP5eCPolnClshPnr1z2w8UNXttZyuvvzqvz1GGhHKd3zJmk1bqKxpxHDFM2DoaG65
      eQZ9Er090k4RiU2maVJdXU1RUVG0q9ItBSARERG55np7AFKPt4iIiMQcBSARERGJOQpAIiIi
      EnMUgERERCTmKACJiIhIzNFO0CI9wDAMHA79vhCR2OV0OjEMA6fz6l/X831SABLpAYZh4PVq
      Xx0RiV2WZfXqZ6F+ooqIiEjMUQASERGRmKMAJCIiIjFHAUhERERijgKQiIiIxBwFIBEREYk5
      CkAiIiISc7QPkEhU2Rzfu4XPPt9I+ckaIrgoHjSC+QsWUJSZeKFUJMjOL1bz0Wdf0tQZIn/A
      CBYvufWSMmDTUFnO2jVr2LX/GIGITWZ+CbPnLmDkgDwcxoWSNcd289aK9zhR00xiRh6zFyxm
      0tAiDOOiQiIiNzDDtm37agpGIhFM0+zp+ojcEBwOBz6f7y+UCvD+c0+xs9nH/LlzGDKgEKcV
      YNu6D3l34wke++tfkpvswbYttn24jPf3BfnRA3dSmBHH9rUreXv9CX76q8cpTI8DLHateYcV
      Gw4zdc5cJo4aQrzL5ujeL3lp+ccsevivGdsvHYCGY1v5l6feY9F9DzK+LI+aYzt57tnlTLrn
      l8wentfj/xsRiQ1+v5+KigrKysqiXZVuOX/zm9/85moK2rZNJBLp4eqI3BgMw8Dl+ksdrAGa
      /cncdvt88rPScDkdOFwe8ooH0nRgI01xBQzISSPSXsmzL33MnY/+nIF9k3E4XOQUD8Su2cFX
      px2MKivAMCyamgPMXLiYoSV5eFxODIeT9L5FJIVP8eVRk/FDi8Hys/Lll8ibdie3jB2A0+kg
      OSOXAdkOXlu5iQlTxuHRwLiIXAPhcJiWlhb69OkT7ap0S486kahJZPzkEXgc3Q07GTjODkdV
      H95FJHcEA7MvDHcZDjfDx0+g+tBuOoIW4GTQqDFkJF6+5byNwYX3kplNtRxucjB5eDEXj3bl
      DJlAH/MoR6s7r20TRUR6KQUgkV7mxK7P2VXrYFj/XACqKqvJKyjAdVlOSk7tixVsosMMXvFa
      zZUH+GjDEcaNHQpAW2s9Dl8qyXGXBSVHIrlZCVTX1l/TtoiI9FaaBC3SK9iEzQ42fbyCD7dV
      c/8jj5CT7AEgYAZJykjscobX68PrcGBGrC7HrEiIQ1+t5bX3NjJl8f2MKU4DIBw28XqScDm7
      9jqlJCUTCGien4jEBgUgkSizbZuGykO8tfxNOhL68av/9Cuyky/uobGxra5rFWxsulvC4G+r
      46O3XmVXlcGdDz/O4MI+GBefZdt0t/LBurr1ECIiNwQFIJEoO7lnPc+9uYYxsxYzZ/IIfO5L
      R6bj4+NobWvtcp4Z8BME4lzO85+1VB3iuedfJWnAJP7qVzNJjXdfco7bE48ZaiMStsB56X2a
      W1vIio+/dg0TEenFNAdIJIraTu/l6Vc/5Za7HmLB9FFdwg9AQUE+p46fIHhZB01LQyVOXwbx
      vjNDZcH2Wl5Z9ho5YxfywG03dwk/AEkpmRj+Zho6LxvqijRTWWOSm9M7V2uIiFxrCkAi0WKH
      WPX2W5TNuoOJg/LpdjEYkFE6muTGPew+3nR+yMsKB9i8YRPFI8aQ4DLAtti38WNa04ezeOYY
      3Fe4mCclm1EFbtZ+uZ/zW4DZNuVb19GePpSSzMtXkYmI3Jg0BCYSJVZ7NbuPBli8IJ3a2pou
      x+OSUkmO9+L0pLNk4RRefvlZIktupTDDx/bPP2R3ax8emzIUwwA7HGT3vqP0H30rLQ21tFx2
      LZcvgYyURDDczFi4hH978kVW+iKML8un5tguVnywgzt+/iu82ghaRGKEdoIW6QFXsxN0sLGC
      Z19+k7ZA9xuMjpp1G3PGlABgW2GO7/+KtRu20NAeoqB0BLNumkxmchwAVijAylee4kht99/R
      zNIJ/Hjx9PN/t9Se4NPVn3KsuomkPnlMnzGLssJMvQpDRK6Z3r4TtAKQSA+4uldhiIjcuHp7
      ANIcIBEREYk5CkAiIiIScxSAREREJOYoAImIiEjMUQASERGRmKN9gER6gG3bBINXfku7iMiN
      LhwO9+pnoQKQSA+wbZtwOBztaoiIRM25ANRbn4UaAhMREZGYowAkIiIiMUcBSERERGKOApCI
      iIjEHAUgERERiTkKQCIiIhJztAxeJMps28ayIliWDYDD6cThcGB0KWcRCUewAYfDicPZtQzY
      WJZFJGIBYDgcOB0ODKNrSc7dFwcup34LiUhsUQASiaJQoJ1dWzawded+Gls6sDBI7pPLjJvn
      M6ykL46zuSUcaGXd6g/YuucoZsQiMa0vs+ctuqRMJGxyfP9ONny5jdN1TUQsG19iGqMnz2L6
      uEG4HRdCUDjo5/ih3Xz6yWe4B8zkoUUTo9B6EZHoUQASiZpOPnjpBRqTi5h/+/3kZWfgsEMc
      3buFN5e/TPKjv6A4Iw7bttj04XL2tfbhwcd/TUaih2O7N7L89ZfxPfgIpX2TgQg717zLF8cD
      3DRjEXcX5+Fx2tSePMwby9/Gm5zG1EF9Aag6sp1Va74kEpdJXt8Mauzo/hdERKJB/d4iUWMw
      dNqtPHD7AopyM3E5HThcXvqPmMTwHA+HK2oACLecYN3uBm5dPI/M5HgcDhclI6Yya2Qm677Y
      ReRsgMnqP4YHf3Q3wwcW4nU7MRwusosGM3N8Kfv2Hj5/17bOMNMX3MFP7rudkty0aDRcRCTq
      FIBEoiaO/qUFuByXzc+xLPxmEI/HDUDVkf14ioZRkOo9X8QwnAwYNoLmigN0BC3ASX6/fiR4
      L+3UtW0bv78Tj/fCuaUjxlOSl4mzu3lBIiIxQgFIpBexwkF2bXiPw51pjOh/ZsiqtqaenL4X
      5vqck5jUBzvcTofZ/YsGbStC5cEvWb2thikTh/Z01UVEriuaAyTSK9h0Ntfy2QfvcLA5jh/9
      +C7SfE4AQuEwccnxXc5wuz14HE5CltXlWNhsZ8vaVazfc5p5d93PgD4JPd4CEZHriQKQSJTZ
      tsXJg9t45/019CmdwKO3TSXZd+lXMxKJdDnPsi0sy8K4bDF8S+1x3nnjTdrji7nvwQfJTU/s
      Zrm8iEhsUwASibJDmz9k+WcHmXfbPYwamN9lTlBiYgKtba1dzjMDnYQcDuJdzvOf1R/byTOv
      vM+wmxZx14SheN3OLueJiIjmAIlEVX35l7y2+hD3PPQIY7ubEA0UFBdy+mg5fuvi9eo2TbUV
      uOOzifedmSztbzrJy69/yMRF9zJvynCFHxGRr6EAJBItVoBPP/yUcfNvo392MldalJVcNIyc
      8HG27a/CPpuBImYbG9Zvo3T0aHwuA2yLPV+swdt/IpOHFeHQCi8Rka+lITCRKIm01XKkOsRU
      Rxv79u3rcjwtu4CcjCQczkQWLJrDS+++Skf9ZPLSfezdsp7G+FIWjirBAOxIkMNHK0npX8Th
      A/u7XMublEH/gmyskJ9jx45jhs8kqZNVjbR2Os7f35vch/75WT3abhGR3kABSCRKLMPL8DGD
      qTm8j5pujg9wpZGTkQSGQU7ZBB5Kyearr3axrzZE/sjZ3DqslATPmWEuGweFpWWcbq5mz57q
      LtdKyR90NgAFOHJwHy3+c5OqU8iND7Fnz54zfxUMUQASkZhg2LZ9VRvhRyIRTNPs6fqIiIjI
      DcA0TaqrqykqKop2VbqlOUAiIiIScxSAREREJOYoAImIiEjMUQASERGRmKNVYCIiItIjLMsi
      GOz+hc3RdtWrwDo6Ojh16lRP10dERERuAJZl0dHREe1qXNFV9wA5HA5cLnUYiYiIyF9mWRbx
      8fG9dhn8VfcAiYiIiFwtv99PRUUFZWVl0a5Kt/5/Y5JJn6D5mAEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='576' name='Population Receiving Points per Year' width='576'>
      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
      o+Vyt1uWx10fEG6P5HXX/+3xyHK728VIU5B43A3h4m54Dk/z1632bfF8nsbt3LJcrsOHCLod
      AQSg69hBqbRYqq1uChSnRVy0Dha76eumS3mDweZDK3bLbVqcWNr4HK0CqfH3eEczHk6bRaG3
      czoIlnb7dLFjs0saIsSyJMvVFBqWZcmxXPWDdrlkNW3nag4Xy9UiIlr87W4RJi2DoyEwWgaI
      XG5ZblfDY1fD+obncLlaPG74u2FbiwhBAwIIRyYYkMpKwj0K9BTFhdKB3c0noUodH0Zqta5x
      cYgAabtOavglbLVabrV7jTb7dDiW1s/htFnWdp/mbUK8B0ey2s7atHrttiEWYpztZpLarmve
      p91YWz1niDG2DIWmPy1mORq+bhknLcNCLpfksupnN9r8sUI+boiVb4qQpJT67YEuRADhyNTW
      Sp9/EO5RoCdq+KXX/Luv41+C/Bv9WOBICtT/Car+T0d3oexsU+dIrohuejGYisQGAADGIYAA
      AIBxCCAAAGAcAggAABiHAAIAAMYhgAAAgHEIIAAAYBwCCAAAGIcAAgAAxiGAAACAcQggAABg
      HAIIAAAYhwACAADGIYAAAIBxCCAAAGAcAggAABiHAAIAAMYhgAAAgHEIIAAAYBwCCAAAGIcA
      AgAAxiGAAACAcQggAABgHAIIAAAYhwACAADGIYAAAIBxCCAAAGAcAggAABiHAAIAAMYhgAAA
      gHEIIAAAYBwCCAAAGIcAAgAAxiGAAACAcQggAABgHAIIAAAYhwACAADGIYAAAIBxCCAAAGAc
      AggAABjHE+4BdKXqsjx98skW+dssd0XEaOKJk5QU7W5aZgdrte2LL3SwtErxqf01btRQRXpa
      9KHt05bPP1ds/5HKTotv9XxVxQe0cdtBTThhouIi3QIAAMe2Xj0DVLDzU726/gtVVFWpquWf
      6moFbadpu0BFnu778++16t0vVF5epo9fW64/3fWIDlbUqWkr26cNb76qrbklrV4j6KvU6qce
      087igKIievW3EwCAXqMXzwA5KszLVfbxp2nB/EmH2Sygl59+RM7gWbrj4hnyWJITmKO1yx7Q
      U6ve1g8uPUselxV6VyeoL956QTsC2br1zEnyWKG3AwAAx5beO2Xh+FWQX6l+6cmH3azu0A69
      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
      iYiIzKxfAC1sqdcBd409AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Population by Points by Year (2017-2020)' width='192'>
      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
      E6Mile4z7wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='576' name='Total Acceptances' width='576'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
