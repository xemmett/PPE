<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0511.0936                               -->
<workbook original-version='18.1' source-build='2020.4.5 (20204.21.0511.0936)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='all_points_statistics' inline='true' name='federated.1gau13r1tjf27218yx7jk1lhweb5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_points_statistics' name='textscan.06wiglj1i6me7b186a7ek1wmkouq'>
            <connection class='textscan' directory='C:/Users/xemme/fyp/scrapers/cao.ie' filename='all_points_statistics.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06wiglj1i6me7b186a7ek1wmkouq' name='all_points_statistics.csv' table='[all_points_statistics#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
            <column datatype='string' name='candidates_scoring' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='real' name='percentage_of_total' ordinal='2' />
            <column datatype='integer' name='accumulative_population' ordinal='3' />
            <column datatype='real' name='accumulative_percentage_of_toital' ordinal='4' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.06wiglj1i6me7b186a7ek1wmkouq' name='all_points_statistics.csv' table='[all_points_statistics#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
            <column datatype='string' name='candidates_scoring' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='real' name='percentage_of_total' ordinal='2' />
            <column datatype='integer' name='accumulative_population' ordinal='3' />
            <column datatype='real' name='accumulative_percentage_of_toital' ordinal='4' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>candidates_scoring</remote-name>
            <remote-type>129</remote-type>
            <local-name>[candidates_scoring]</local-name>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias>candidates_scoring</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_of_total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage_of_total]</local-name>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias>percentage_of_total</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accumulative_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[accumulative_population]</local-name>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias>accumulative_population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accumulative_percentage_of_toital</remote-name>
            <remote-type>5</remote-type>
            <local-name>[accumulative_percentage_of_toital]</local-name>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias>accumulative_percentage_of_toital</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[all_points_statistics.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Interval Size' datatype='string' name='[Calculation_1328280470415839232]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL(STR(INT(SPLIT([candidates_scoring], &apos;-&apos;, 2))-INT(SPLIT([candidates_scoring], &apos;-&apos;, 1))))&#13;&#10;THEN &apos;exclude&apos;&#13;&#10;ELSE STR(INT(SPLIT([candidates_scoring], &apos;-&apos;, 2))-INT(SPLIT([candidates_scoring], &apos;-&apos;, 1)))&#13;&#10;END' />
      </column>
      <column caption='First Step pts' datatype='string' datatype-customized='true' name='[Calculation_1328280470419062785]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL((SPLIT([candidates_scoring], &apos;-&apos;, 1)))&#13;&#10;THEN [candidates_scoring]&#13;&#10;ELSE (SPLIT([candidates_scoring], &apos;-&apos;, 1))&#13;&#10;END' />
      </column>
      <column caption='First Step pts (int)' datatype='integer' datatype-customized='true' name='[First Step pts (copy)_1328280470421233667]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT(IF ISNULL((SPLIT([candidates_scoring], &apos;-&apos;, 1)))&#13;&#10;THEN [candidates_scoring]&#13;&#10;ELSE (SPLIT([candidates_scoring], &apos;-&apos;, 1))&#13;&#10;END)' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='all_points_statistics.csv' datatype='table' name='[__tableau_internal_object_id__].[all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62]' role='measure' type='quantitative' />
      <column caption='Accumulative Percentage Of Toital' datatype='real' name='[accumulative_percentage_of_toital]' role='measure' type='quantitative' />
      <column caption='Accumulative Population' datatype='integer' name='[accumulative_population]' role='measure' type='quantitative' />
      <column caption='Candidates Scoring' datatype='string' name='[candidates_scoring]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_1328280470419062785]' derivation='None' name='[none:Calculation_1328280470419062785:nk]' pivot='key' type='nominal' />
      <column-instance column='[candidates_scoring]' derivation='None' name='[none:candidates_scoring:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:candidates_scoring:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;130-139&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;220-229&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;310-319&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;400-449&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;500-505&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;590-595&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;100-105&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;190-195&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;280-285&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;370-375&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;460-465&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;550-559&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;110-119&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;200-249&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;300-305&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;390-395&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;480-485&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;570-575&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;150-159&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;240-249&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;330-339&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;420-429&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;510-519&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;610-624&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;140-145&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;230-235&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;320-325&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;410-415&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;500-509&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;590-599&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;120-125&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;210-215&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;300-309&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;390-399&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;480-489&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;570-579&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;180-185&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;270-275&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;360-365&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;450-459&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;540-549&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;100-109&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;190-199&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;280-289&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;370-379&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;460-469&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;550-599&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;170-175&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;260-265&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;350-359&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;440-449&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530-539&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;120-129&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;210-219&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;300-349&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;400-405&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;490-495&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;580-585&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;150-199&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;250-255&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;340-345&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;430-435&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;520-525&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;625&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;&lt;100&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;160-165&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;250-259&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;340-349&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;430-439&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;520-529&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;170-179&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;260-269&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;350-399&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;450-455&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;540-545&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;180-189&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;270-279&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;360-369&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;450-499&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;550-555&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;140-149&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;230-239&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;320-329&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;410-419&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;500-549&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;600&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;130-135&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;220-225&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;310-315&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;400-409&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;490-499&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;580-589&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;100-149&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;200-205&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;290-295&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;380-385&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;470-475&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;560-565&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;160-169&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;250-299&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;350-355&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;440-445&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530-535&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;150-155&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;240-245&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;330-335&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;420-425&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;510-515&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;600-609&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;110-115&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;200-209&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;290-299&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;380-389&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;470-479&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;560-569&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1328280470419062785:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;180&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;380&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;580&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;100&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;300&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;500&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;140&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;340&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;540&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;220&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;420&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;625&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;190&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;390&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;590&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;150&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;350&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;550&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;280&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;480&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;110&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;310&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;510&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;260&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;460&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;160&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;360&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;560&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;&lt;100&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;230&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;430&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;240&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;440&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;270&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;470&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;290&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;490&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;200&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;400&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;600&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;170&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;370&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;570&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;120&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;320&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;520&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;250&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;450&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;210&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;410&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;610&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;130&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;330&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_points_statistics.csv' id='all_points_statistics.csv_164B2948AE7041799C97E1BCEE517D62'>
            <properties context=''>
              <relation connection='textscan.06wiglj1i6me7b186a7ek1wmkouq' name='all_points_statistics.csv' table='[all_points_statistics#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IE' separator=','>
                  <column datatype='string' name='candidates_scoring' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='real' name='percentage_of_total' ordinal='2' />
                  <column datatype='integer' name='accumulative_population' ordinal='3' />
                  <column datatype='real' name='accumulative_percentage_of_toital' ordinal='4' />
                  <column datatype='date' date-parse-format='yyyy' name='year' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Points Interval Step Sizes'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_points_statistics' name='federated.1gau13r1tjf27218yx7jk1lhweb5' />
          </datasources>
          <datasource-dependencies datasource='federated.1gau13r1tjf27218yx7jk1lhweb5'>
            <column caption='Interval Size' datatype='string' name='[Calculation_1328280470415839232]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL(STR(INT(SPLIT([candidates_scoring], &apos;-&apos;, 2))-INT(SPLIT([candidates_scoring], &apos;-&apos;, 1))))&#13;&#10;THEN &apos;exclude&apos;&#13;&#10;ELSE STR(INT(SPLIT([candidates_scoring], &apos;-&apos;, 2))-INT(SPLIT([candidates_scoring], &apos;-&apos;, 1)))&#13;&#10;END' />
            </column>
            <column caption='Candidates Scoring' datatype='string' name='[candidates_scoring]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1328280470415839232]' derivation='None' name='[none:Calculation_1328280470415839232:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:ok]' pivot='key' type='ordinal' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470415839232:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1328280470415839232:nk]' />
              <groupfilter function='member' level='[none:Calculation_1328280470415839232:nk]' member='&quot;exclude&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470415839232:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:ok]' value='240' />
            <format attr='width' field='[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470415839232:nk]' value='152' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470415839232:nk] / [federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{BB35FDEB-5BBD-45EC-90FA-5B89A49E9596}' />
    </worksheet>
    <worksheet name='Population by Points by Year (2017-2020)'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_points_statistics' name='federated.1gau13r1tjf27218yx7jk1lhweb5' />
          </datasources>
          <datasource-dependencies datasource='federated.1gau13r1tjf27218yx7jk1lhweb5'>
            <column caption='First Step pts' datatype='string' datatype-customized='true' name='[Calculation_1328280470419062785]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL((SPLIT([candidates_scoring], &apos;-&apos;, 1)))&#13;&#10;THEN [candidates_scoring]&#13;&#10;ELSE (SPLIT([candidates_scoring], &apos;-&apos;, 1))&#13;&#10;END' />
            </column>
            <column caption='Candidates Scoring' datatype='string' name='[candidates_scoring]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1328280470419062785]' derivation='None' name='[none:Calculation_1328280470419062785:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1328280470419062785:nk]' />
              <groupfilter function='member' level='[none:Calculation_1328280470419062785:nk]' member='&quot;&lt;100&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;&lt;100&quot;</bucket>
              <bucket>&quot;100&quot;</bucket>
              <bucket>&quot;110&quot;</bucket>
              <bucket>&quot;120&quot;</bucket>
              <bucket>&quot;130&quot;</bucket>
              <bucket>&quot;140&quot;</bucket>
              <bucket>&quot;150&quot;</bucket>
              <bucket>&quot;160&quot;</bucket>
              <bucket>&quot;170&quot;</bucket>
              <bucket>&quot;180&quot;</bucket>
              <bucket>&quot;190&quot;</bucket>
              <bucket>&quot;200&quot;</bucket>
              <bucket>&quot;210&quot;</bucket>
              <bucket>&quot;220&quot;</bucket>
              <bucket>&quot;230&quot;</bucket>
              <bucket>&quot;240&quot;</bucket>
              <bucket>&quot;250&quot;</bucket>
              <bucket>&quot;260&quot;</bucket>
              <bucket>&quot;270&quot;</bucket>
              <bucket>&quot;280&quot;</bucket>
              <bucket>&quot;290&quot;</bucket>
              <bucket>&quot;300&quot;</bucket>
              <bucket>&quot;310&quot;</bucket>
              <bucket>&quot;320&quot;</bucket>
              <bucket>&quot;330&quot;</bucket>
              <bucket>&quot;340&quot;</bucket>
              <bucket>&quot;350&quot;</bucket>
              <bucket>&quot;360&quot;</bucket>
              <bucket>&quot;370&quot;</bucket>
              <bucket>&quot;380&quot;</bucket>
              <bucket>&quot;390&quot;</bucket>
              <bucket>&quot;400&quot;</bucket>
              <bucket>&quot;410&quot;</bucket>
              <bucket>&quot;420&quot;</bucket>
              <bucket>&quot;430&quot;</bucket>
              <bucket>&quot;440&quot;</bucket>
              <bucket>&quot;450&quot;</bucket>
              <bucket>&quot;460&quot;</bucket>
              <bucket>&quot;470&quot;</bucket>
              <bucket>&quot;480&quot;</bucket>
              <bucket>&quot;490&quot;</bucket>
              <bucket>&quot;500&quot;</bucket>
              <bucket>&quot;510&quot;</bucket>
              <bucket>&quot;520&quot;</bucket>
              <bucket>&quot;530&quot;</bucket>
              <bucket>&quot;540&quot;</bucket>
              <bucket>&quot;550&quot;</bucket>
              <bucket>&quot;560&quot;</bucket>
              <bucket>&quot;570&quot;</bucket>
              <bucket>&quot;580&quot;</bucket>
              <bucket>&quot;590&quot;</bucket>
              <bucket>&quot;600&quot;</bucket>
              <bucket>&quot;610&quot;</bucket>
              <bucket>&quot;625&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[yr:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:year:ok]' member='2017' />
              <groupfilter function='member' level='[yr:year:ok]' member='2018' />
              <groupfilter function='member' level='[yr:year:ok]' member='2019' />
              <groupfilter function='member' level='[yr:year:ok]' member='2020' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gau13r1tjf27218yx7jk1lhweb5].[yr:year:ok]</column>
            <column>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]</rows>
        <cols>([federated.1gau13r1tjf27218yx7jk1lhweb5].[yr:year:ok] / [federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk])</cols>
      </table>
      <simple-id uuid='{B850E8E8-4CA0-4C46-9A97-A27047483C98}' />
    </worksheet>
    <worksheet name='Population per Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='all_points_statistics' name='federated.1gau13r1tjf27218yx7jk1lhweb5' />
          </datasources>
          <datasource-dependencies datasource='federated.1gau13r1tjf27218yx7jk1lhweb5'>
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Year-Trunc' name='[tyr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gau13r1tjf27218yx7jk1lhweb5].[sum:population:qk]</rows>
        <cols>[federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:qk]</cols>
      </table>
      <simple-id uuid='{4699C496-DA9F-4D74-86B6-2810667CBD4F}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{13E47AC2-B234-4DF8-A496-841995716B36}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Population per Year'>
      <cards>
        <edge name='left'>
          <strip size='170'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;9&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470415839232:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:F10:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:candidates_scoring:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7EF455F8-0D41-4021-B795-03082D087A41}' />
    </window>
    <window class='worksheet' name='Points Interval Step Sizes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470415839232:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:candidates_scoring:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:ok]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EF75250-9F5E-4BC6-87E1-0CEE0C7AF339}' />
    </window>
    <window class='worksheet' name='Population by Points by Year (2017-2020)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2012</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:First Step pts (copy)_1328280470420467714:nk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:First Step pts (copy)_1328280470421233667:ok]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:ok]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[tyr:year:qk]</field>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{119FD0A2-2B06-486B-A3B9-ADF2DBAD67BB}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gau13r1tjf27218yx7jk1lhweb5].[none:Calculation_1328280470419062785:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F249F2C1-A79B-4165-BB0C-6E2B820F4D3C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Points Interval Step Sizes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population by Points by Year (2017-2020)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dWWxjWXrff3cjKYoiqX2XSirV0l3dU724x5Mee2zDG2wYAYIkL4nzkOUh
      L8mTERgBEkwSxAYSJGMnMWzDSRwEdjwee7yMYU/PeLae6Znpnu52d20qVWlfKO4U10vyrnkg
      RVIl1SKVJEri+QFVIi/vPec7373/u//PkVzXdREIOhS53QEIBO1ECEDQ0QgBCE6VreUFMiWD
      +fn5p85rFWPcfrgNwJ2/eY/33vuApfvzZMrGnvlSyRQAjlHiu++8w8LyBslU6unBWBXUwzdB
      IDg6w6ND/PEX/4DLr3yaD959h3xV4trMKPfmF5gY7ufBts5P/tSPEvSq3L69yNU3fgSAxeUV
      Xn7lh3H0HTYe3OHtrTgDoSC9A4N866/f4m//vX9AyEkQydu88toA/+d//ja/8Hf+LquLS/hC
      /RSSW9iuh5/4mZ/kB9/5Btg2fX1BcQQQnC6av48en5+Xro/zgw9voWoKiw8ekEtHWF3bZOrG
      awS9Kq5jU7QkulUJAEnR6O/vRd/JkMmkGL/2KhNDISKxDJOTU0yODtA9NMdPvHaZv/jy1xmb
      nGFQK3F7JY6qSBQrNmHFIFOxSWULvHx5iHjBEUcAwenz8muv49F8/OxPfoa8pdI7GKKnb5C+
      cJjgYDcAheQ6gaFppNr2zydeeY2+vl6cK9cYcMAbCmNldcbHuglf6mMjlmakR2V1fYs33vgh
      PFaelNvLj35ihkA4zHwmztTMmwz7VaxKkYW4xaff/CTSSd0GrVareL3ekyj6wiJy1qRcyKF2
      h9Ceco7ybDlzSad36O/vAyCdTtPf3w+c4EVwtVo9qaIPhWNbJOIJLMelkNuhXDVxXQddL1Mt
      l4hGo+zkCu0OEzg7OavoRdI7OVzXIZVM4bguplHBsGwso0IileGkHx919Tx944dnzZnU2PiB
      xsYPXPxToGI+h+saLD2cp+p4kd0oowNB1rdz3Lwxh0eBSDRJb6in3aGeGfL5PDupBPG4n2BP
      FyvrW1i5OF1DcxTTG/R4VSKSh4n+QLtDfW4u/EVwV5eXVCrPWF83oaFxfF6NgeExun0aqseL
      XiwwMzPd7jDPFIrkIvv7UFWJ8bEJXKvC5NQEMuBVJDJ5HU2R2h3msXDhBbCxtoorgekJk99a
      wJE0YpENEok4uZKOrXTR7VXaHeaZYnVtDcus0N8T4NbtWwRD/axtbLG9vY2saWiahsTFEMCJ
      XQTncjlxQXdIisUigcD5P604TZ43Zyd6DSBJF2MvcVpIkiRydkieN2cnJgBJksQR4JCI26CH
      53lzduGvAQSCJyEEIOhoDiUA17FJJJO4rsPW+grJTJ5yMcvqRgTHsVlbWUKvWicVq0Bw7BxK
      AHoxz9pmBFPPUjBVoltrrG1sE1ANFu7O4+sfZW1l5aRiFQiOnUNdBHcHe+nxx3CRqRSzyIqG
      oqr4u/yU9R26A34KioTjODiOg2WJo8FhsG1b5OyQPG/ODiWAbCpOLpcjE+7Fq8qoXX7CXRIr
      2xluvHKNxXu3GRy7hCzLyLKMql74Ny2OFUVRRM4OyfPm7MQehOXzeYLB4EkUfWEROTs8z5sz
      cRdI0NEIAQg6GiEAQUcjBCDoaIQABB2NEICgoxECEHQ0QgCCjkYIQNDRCAEIOhohAEFHIwQg
      6GiEAAQdzaEFUKlWAKiWdUp6BdsyKBRLuK5LIZ/DdsSIS4Lzw6FepC7m0nx8f4W/9dqLLDxc
      ZmR8gsjaNq4EPm8XuitDLMMLV2dOKl6B4Fg5lAACoX76wwmqeoGK4bK1tUWP38/kcIi7d9d5
      6c0fYntpSTjCjohwhB2eU3eExeNx+voH8GkOijeAV7F5uBrh6gvTLHx8i97BEeEIOyLCEXZ4
      hCPsAiFydniEI0wgeA6EAAQdjRCAoKMRAhB0NEIAgmPFdV1cx2l3GM+MEIDgWCmvx1n8T59v
      dxjPjBCAoKMRAhB0NB0hgEh2k689eKvdYQjOIB0hgFghyndX3258dx2D/Ef/DNcxnml5ZzuD
      E82cVHiCNiJePHkGXL0Kshi87iLScQIoF6NUChF2RwZ2XRfTtvE85oWqwsIGXstF8YvB6y4i
      HXEK1Epm+32WP/qdxveSYfBr3/7aY+ff/qNvYWbypxGaoA0cWgClUgkA1zEpFHUso0Iqk8V1
      XdLJBKbd/ocgS6kyumG3OwzBOeBQAijm0nx89z7gsr68yOLqJstLSxQyMVYXF8lWLBaXVk8o
      1GfnTrREcVcAP/gfoKefuoydz+Maz3ZR3AkUq0UqZqXdYZw4h3aE9YUS6NkEq9tpDAsCkyMM
      D4S5d2+DG29eIbLYPkeY67pYtgO4WJk19DvfpMsu4dhW7TfLwnYcXGoWCNuysetHrOR/+RyB
      n/85fK+/trfMermO4+CecHvOkiPsd9/9La4MXuOnrv7cvt/uxaOk9RKfmZnb95tt24CLZZin
      cuPg1B1hyWSS/qExfuIzb7K+EUVxKyyuR7n20gwPbt2mf2isLY6wUirOajTD5/5qkV/4+TeR
      9DTu4ltIs59ClmUkSUJVVRRZRqK2YrYLeRTFA9RGtj8oZqnlN0VVyUd2UD0q/sGeY29Dux1h
      1uq3QetGnXgdST44HwCGbVMyqgf+pigKIOF+uIT68iWkQNeJxvy8OTvUkuGBYT7zo8ON79PT
      EwBM1L+/+krfkQN5XvR0jFLyyac6H6d+QNgxG9//93vf45XJ2Weu461f/QJzr71AeKr/RARw
      2qx8+68YvfkpukK19WatvI0UGEKdeP1YyrcMC3OnyMY3H3D5Z19C6z57d9I66i7Qt6JfpmpX
      j7y8bdYO7xcF17HhUUesa4OpA1Aw86wXlo9cfnotwQef/zau7ZzZrHWUAAQHY9gOsXz9BkBu
      Ez76XQDi5W3eTXwLADP7MZWtP2hThCeHEICAYtXmnbXcY39/8N6vkdr4Ok411ZjmFIokfuVX
      TyO8E0UIoJV8Dv7o8/zWr3+OtZWVdkdzZihkHlIt772+ci2Lyv2FNkV0fHTcqxBPxHXBNDGq
      VSzTxD4jtySPm60HdygX82LvhxDAY1lffohZ0S/kRpKJbpJPxRkdGGh3KG3nIq5fwQnh4LKU
      TDQeJF4EzrUAKlmd3FaSxQ/eaXco54a1b9ynlDjay32mbfMv/+SPMO3Dv2dVLRUxKvqR6j1J
      zrUAitEssXtrvPul3293KOcG27ChpQv7P39ngS++ff/E633/y1/gwXtvP33GU+ZcCsBxHFIr
      sXaHcSHI6wZ5/egPB88751IAtmHx3f/11X0PMQWCw3IuBSAQHBdCAEcgvrbEN37vN9odxplj
      9eECeqnY7jAOhRDAEbCMKsWd1NNn7ASKRcjX7ipFtzapVs6XiebQY4R9NL/Mp994lcXFhxQr
      LqEuyOtVxkeG2YynCYb6uTo78fTCBBeDxQdQrcKn3mx3JEfi0I6wgd4EsqrSF+pB61axqzrX
      Lw+f6hhhtlW7D+04Tq0zVhec+t/agDcujltzfrkt8wG4btMR1tqRa8P1RdMF5rruHkcYrdPr
      DrNjbdcpOMJcmvHT0pbdHMq7bXaa+Wz9B+A4rZ8dCtks3/6TL9If7qnnyQW3nndacngGc3Zo
      R9jm5ibBgJ+Fh2tcmr2MZFdYWMoxNTPM/Me3CIb6TtwR5qq1jXHX6SVJINf/SpIESMhSzfkl
      tcwHIElNR5gkSUiy3Pgsy3LNAbb7myTtcYTROr3uMDtOTsMRJtGMn5a2NHNYb7PczGfrPwBZ
      bv0sU61UuPPxR/z4j/9YPU8SSPW805LDM5izQzvCfuanfwaA8Ynp+tTm6c7I2OSRAxEI2oG4
      CBZ0NEIAgo5GvA7dIWzfXWdnK4WPs2dMbyfiCNAhGHoVfed8PaQ6DYQABKeIy8Ov/jG2ZT59
      1lNCCEBwerjgWOaZ6llGCOA5qBaymGfQ5PEoTjSDWzpfryicFkIAz0Fq8S6lxHa7w3gqTjxb
      G+RDsI9zdxfIie1gx3baHYbggnCuBLD1h9+gZ7AXb+j898spOBucq1MgM1vEqZ6dOwiC88++
      I8CdD95haTPJ7As3uXn92XtOFgjOI/uOALlCiampKXrFaYagA9gngN6eLr7/ve+zUxS3zQQX
      n30CSJcs/vE/+UVy8f2390r5DO9/dAfHNrh7+xYPVzaIrC1x69ZtCvkdPv74FhvbwiooOD/s
      uwZ45aUX+eDDO9x8/Y19M3cFwgS64pSLWfqGL1HOJSgBV6ZHuHd3hRc/9VrdEdZ3Io6w/c6k
      9jrCXNfFPsZ2npQjrBGv456II2z3M7hPcYQ59XZauNLxjB92rI6w9Ye3WNpMkkym8IUG+eGb
      1/dWZpmUy2VcFHLZFLZloUo2yXSGvv4A8Wgc05VPzBG235nUXkeYJEkox9jOk3KEWbvxytKJ
      OMJ2P4P0FEeYXG+ninJGcrZnybHxab75vQ+5PDuLXizsm9mo6AwODGLJPsYGQ2j+IJpkky1W
      GOgLk0ommJybOXIwAsFps0cAiq+bT7/5Jl5fNwNDQ/tm7g720h3s3f3WmD7orY0EODg0vG+Z
      TsLRM2AUkcNT7Q5F8IzsuQiWFY341hrf/PqXefdv7rYrpnOLtfx1qu98rt1hCA7BvpOnidlr
      IEFXUDwHEJw8rqGDoiEpWlvq33MEWH94i3fffY+tePbRnwSCE6H8pX+BtfzNttW/ZyufvnqT
      l65M4vUo7GQfP2rgabOTTrF47067wziQe2tJ/u9bt9odxoFYeoW7v/Sb7Q7jTPOY3byCz9ue
      Q9JBGJUK+ezZfAV6p1BhKZJpdxgHU7sB3+4ozjT7BODzdaGoKmPjY+2IZx/vv/t91lbFkKVP
      I/rL/xorc0aFeIbZJ4B4JsfNmy9z/6MfUCy30UWUz8PCPIsLCyRiYjSYp2HFYnCEsbvawWYi
      x06h3O4wgAMEMDE8wIcf3qJ/cJCK0Z5xcgtvvYX+ta/Bgwdtqf/coutwDron//2v3eH9hbNh
      Jd0ngEgszuXZSSxXYyDUfdAyJ46xsYkVj7el7nPN33xY665c8MzsFYDrEgoE2I7G6e3vP/Vg
      cpUy311dOvV6T4K70dt8b/U7p16vC1im2fKCmmCXDzc3+O7K8p5pewSwPP8RDzcijM7c4Mbc
      6fX0rK/+JnYlTsmocjsaObV6T5LV9DJ3oyd7e/Q/fvXLbOf23q52HZd/+69+6dyN1HIaLCTi
      3N6ubV/lW7ep3JvfK4BUOonH08W73/pL7i2un1pgdmkVHNFtx2F5kEjw1sJdvrOyuO+3SqWM
      dYZ6YHsWPvvlX+Ze9Pap1FW5dYvK++/vfRXitR/+McpVA/gRNK/vVALZ5fMffUDa7kVTxRPo
      w+DUR155lAd3bjEyMNKGiI6AXYXEPUzbbHgGToViYa8ANK/vmTZ8q1ri7vxDVF+AoNclky9z
      aXqclbUIfYMjXJo4/FuhpapByakSVrsOvazgnGOU4MGfn1p1rTuMIzkJJMAwTRzFpKp6uDoz
      xt27ay1jhA0e2hG2x6Xk7Lqx3H2OpLPmCNut37KsRj2Pfn5WDu9ucvfFtrsHPTDmM+II243N
      sqzG9FreXbZLm/hzXUx3Xz72nLmOQ6pU5L9/5xv8olNr65EEUK2U6Ar0YlV1bNMhEq0yNBJm
      Y3Ud94iOsD0uJVlCcve6lw52JrXfEbZbv6qqOLKMWx8Ha7fOw+TgWd1NdmmV8ubvAVP7Ytt1
      XR0Y8xlxhO3GpqoqhrS7rmrjl0X0daSCw+XQtWPLmevauEYGSZapbx6NNhxJAP7gIJfwoHj9
      eBUoVgyCgW4KuRz+YOgoRV4s1t4GPXFixbs44Ii7PM+KaxUo3v83wD/d99vRzJSSRE8o3Pga
      0jwABMPhxy3RWaTuQ7UAirieOeuIWy6CjkYIQNDRCAEIOhohAEFHIwQg6GiEAE4Q0zG4v3M6
      77YIDmbz/heZ/+6vPvZ3IYATpGzrfC3yF+0Oo6OxrQqW8fjxkds6RFK5GMN1ztcbi4KLRVsF
      EHn4Jap6ginx/EzQJtomgLKl47jnw8R9lkhsfJuAXzxhPi7adg3whZXfJaJvtqv6c8uD936N
      Una13WGcOMsf/Q7l4vP1BrJd2kS3Sk+c51QE4Nomduxs9uwmOJtsLfwp1fLzjTb0dvQrRMtb
      T5zndARQyaH/4T86jaouJB9svMfKziJf2fzTdody4TiSAFzXYXXxARuROMntDe7cu0+lUuLu
      7VvEUvnjjrHj+cv5P2Mp9ZCVwsN2h3LhOJohppAmksgyMu6nalSZHetj/tYDrrz+KrGVJYb6
      AnscYW69x7I9zp16v5W79rSL5Ah7NM5ndSw9zt1Ua59DPex6PbUkXjRHWDNOcOynuwofzZm8
      8hXc8Cxu35V9cbu7eXNrbTiyI0xWVAaGR7HLRWzXRS+X8fk0dF3HtN19jjBHUQD2OndqNiFk
      qcWddUEcYXvjfHZX2OPcTbX2ydTDrrenlsSL5ghrxgmy8nRX4b6cVXZqPYyo6r64D3KEHekU
      yOMP0+uH0OAoM5NjFE2N6y+/iJ7cZnqmNkaYadn8w//wJ1TN9nSveJbIJe+STYhXIlqxXZeH
      yePrH9SO3aX6/d849HJHdoQNjzXHwZrpqT3Jmrl8pTHNBYplo3HY3mU+dpfEc97eOm/EVr+B
      65iEhz5xuAWtCqx8/WSCajOW7fL99Tx//5jKc0oJ7M0fwPWfPtRyp/sg7MGX2NrZ4qFZpmf4
      dPsdOm/Y2x/jZJbRUmKstpPkdB+ElZJgnY1usc8i3/xolV/5vVp/onb8bluHDjrP3Ine5ou3
      Pv9M84q3Qc8Qbv3uhKCGo69j62uHXm5HT7OaXn76jLT5ZTiB4EmY2Q8xVR3Ff+mJ86VLJnLV
      xnuEOoQABOeab328hm9onNFclWfrS24v4hTomChWbUxbnL6cNm9/vE71OUYyEgI4Jr63lieS
      M9odhuCQCAGcEnYlRmnpv7Y7DMEjCAGcFq6JU+msB4DngRMXwJ1YiVhBnBochnzFEuNbnxIn
      LoBk0aRknOKoH+cc23H507vpA0d9ERw/4hRI0NEIAQg6miM/CCvuxNhIGfR1OSSyOnOzkywt
      rjAwOsXYUO9xxigQnBhHEoBrm0QSOSRXoaC7XB7v5/7th1x74zWiy0s4A6F9Titodfxw4Rxh
      +x1W7t4663E9yeH0aNukRv0X0RHm7on5IEdYq3PsidtjS3zOE7aXY3OEVUp5KpUKsVSeyZE+
      iqUS3QEf+Xyh4Qh71GkFrY4fLpwjbL/DqukIkyS58flJDqdH20aj/ovoCJP2xHyQI6zVOfYk
      WuOTpf3r4EmOsCMJoCvYz81P9HFZ19Ekh1imxLUbM2yurzI7d5Q3MgSC9nD0l+EkiUB3NwDT
      /h4Api7NHktQAsFpIe4CCToaIQBBRyMEIOhohAAEZ54dXcd2TuZ1GiEAwZnnn3/hD4gVTqbL
      TSEAwbnBWF0j/Vu/faxlCgEIzg2OXsJYPd6xEYQATpnFZIL1TLrdYQjqCAGcMl9duM/36nux
      yr15nEqlzRF1NkIAbST16/8NO51pdxgdjRCAoKMRAhB0NEIAgvPHyjIk4sdS1NHGCHNsVpce
      sh6JkUsneLC4gmUZPLg/z05B9P4sOGE21iH9fCNI7nI0ASAxNjFJYSdDLLnDcNjDvVvzDF66
      QmJ7s+E2qs1L05EDtPxUdyTtlrn7ue5UYtcA5TZcRbQ4lNgtt/G5WU7zb8v/jU4WHultwW2p
      pT6b25jstnxvrWev+2zP/7tVueyts8U15dLi1trawP3rrzTdbY2wmjl7NO5H53Nb20AjEY+U
      4T4Sb0v7m4s0c9/Idcv0ZhOapbbE0hp3Y121puCAdLgtUe9Zz3va0HQJtm4DTache6Y342i6
      3nbb2pxcK+tIApBcm5XlFWbm5hpuJddxGw6kZnoO4vG/HDTvbsBPKuvRTWX360HJf+xKOaCM
      x1W7f/r+uh8by6O/2zYY1cfU1LL8gcEcMPGZgz5o2WdbNy0ye+qcB5ffslIfXb/u40p394Tn
      Pjahh1lvRxSAZVYxLZtYLMFgX4hIWuelV28QW7rP4MjEXhsa7PvcdNA1P9fscPW5dm15rZbI
      xk8tZUuttkGpUQ679bTY8Rr11O13tJRHa12NOGku31q+1Iy1YXlsmbPuNKSxYKOdTdvgPrti
      3UrYaOcjOWuNs7lMs6xH27C/ba0xNHPb0qBmnS02zIbd89F1JUmN5Vtjbo27Vv/BuW7Nxx7r
      6WPWN9Ssq7IsNabJ8l6rbeu20Vxf0gF1tZQrHdERpvkCfOJmc7yr3sHa3+s3XjpKcQJB2xB3
      gc4I+XyupXcFwWkhBHBG+M///t9RLBTaHca5YenhQ/74//3+c5cjBCA4l1QrVXaO4aVCIQBB
      RyMEIDgX3I1GWEolj71cIYA2ULEMtrI77Q7jXBHJZUkUj98WKQTQBhLFAm8t3Gt3GAKEAAQd
      jhCAoKMRAhB0NMcmANd1ScZjmLYYD0xwfjg2AeRi6xQsicXFleMqUiA4cY5NAKWSxfDoEJos
      3mcRnB+OTQBDYwMs3r6Nt0eMDyY4Pxx9gIxH0PxhXnklfFzFCQSnguSewDu4juOQy+XI6wY+
      r4YqgWJkQevCcF3s3TGpHBsZCVWBsqXgIKPIMh7TrI9TJVOthycrCqrt1gfMkjENC9Wr4To2
      llnB4+vCsh0qFni8GhoWsqkjqRqGpGDYJrIi43FlHNtAUyWKlgdNUXBcF69hIGkasutSsm1U
      RUFRFahYyB4VSZYxqyayquC6Do5roaoapu1iI6OqCopdRXZNFFWj7NjYLsiqhGaD69qoikTZ
      8dYGo5MlfOUKks8HjkPJMjFtF1Xzonk0PE4VHBNZUSg6DpqiYWOjWiaK6kXGJm8paLKCKsuo
      uo7k8YCiUKpU8Hg8NZNN1UL2ath2bSA6SZJwHAtwUVSVquXiShKqqqHZJSRcJFlBp3ZjQ5Yl
      NMeurQNZJm/K+DUNx7HxlKtI/i4c26ZiWWgeDQUZ17RRPSo2YJs2iiJj1fMvS1C2JFRVAVnG
      YxaQVA8SDgXHQZFlFFlFMnUURUOSFQomaLKC4jholoWkaViOgwUUywY9PQEU10RzDVxZw3Ad
      TNdFVRUk20J2HVRFpuJ4sV0HWZLx2TbUBiI8mZfQ8/k8wWDwJIq+sIicHZ7nzdmxnQI9Hpel
      hXlsSaVqOrz44nVUWcIoZlhYi+HVZLSuILNTYwDk03E24hk0GfyhASZHa3azZHSTVE4Hx6Rv
      eIrh/iDgsHh/HkfWqJoON25cR5EkXMdiYX4eWfNiuQovXp9DAkq5FKtbSTRVwtcdZnpiBIDE
      9gbpfBkck/7RSwz1BgCIrC9TqFg4ZpWxmRcId2s4lsHCwgMUzYONygvXLiMBVrnA/eUNPJqC
      pPm5MjuFBJTzaZY2E3hUCY8/zMxkrc7N1UVKhoNtGkzOXifo1xoZM/Uc91e28GoKijfA3KUJ
      AKKbq+R0A8eqMjx5lf6gD3DZWFlEN11s02B67gUCPhVwWX5wHwuFqmlz/YXreBQZs7TD/dUo
      Xk1G9fVweXocgGImwVosjSZDV3CAqbFa3rfWlilVLSzTZGLmCqFuL+CyuDCP88g6dR2bhfl7
      yJoX05G58cIVJCCfjrERz6LJLv7QIJOjA7V1ur1Bqp73vpFphvt69uV99NJ1egMeHNtk4f59
      FM2L7Sq8UF+nALZZYeHBIqrmwZE1rl+ZRXpCHkvZJCuRFB7lVB6E2ehlk1AojGQZGPXnBOV8
      Aa27h1AwiF4sNuYuFQr4e4KEgj0UC83phXyBnmCIYI+fQkGvT3XQyxahUBjXqGLVj2WObVA1
      JcKhEFZZx67PrRfzeP0BQsEgpWKhpewiwVCIYMDXUjYUiiVCoRABv0qhWKmXXcW0ZcKhEGZZ
      Z/epR1UvIXl8hEIhyqVSo4xyPo+nO1BvZ7POYkknFArR7VMolvaa4qvFIoqvm1AotCc3hUKJ
      YDBET7eXQkv3M8VSmXAojE+TKelGIzcl3SAUCqPY5p68q/4AodD+vPsCQUKh4B5jTqFUIhgK
      4fcqlMq7/ZjalHfXqWlgNsb8NakaEA6FsCvlRt5L+QL+np76Om0pu1CkJxQiGOiiWGjmrFjU
      CYZC9HRrjXa6toFp1fPeUjaAbVSwUQmHQhi63jC/Py6Per6AL9BDKBQ8DQEo9IW70asWExMT
      KPXxYQMDQwwGfWxtbTEwPNyYe2hiklImzmY0yfT0ZGP6xKUZZNcmm68yOTZQn6oy0NdNLpdF
      9vfg2R1HV/UR8EmYrszk5ERjTxHqH6Ev4GFza4uhkdFG2VOXpohHNknsVFrKhulLMzi2SbGq
      MdJfGxFT8XQT8Lpkc1m6e/tR6vP6w/1I1SKS6mVyvFl2cHCYgR4fm5tbDI6MNOucnCCyuUHB
      1BgZ6N6Tse7+QRw9h6z5mBhvLjM2OQVmiXimwsjQ7mFfYmpyjM2NdSr4GOztqk+XmZmZxrJK
      qF19+LVapD3DYzjFHXYyGfqHhhpl9w0PU9rJ4O3qYWy4v5n3yWksvcCObjMQ7mnkfXy0n431
      Nbr6BvEpu+PwepieHqWYy9I3Ot7IzcDoGKXsDul0muHRZntGRofJZHYI9A4yEA40po9PTuFU
      isSzJiNDtTplzc9A2Mva+gb9o+N7Tl20rh68koktqUxOjDem+3v7GekNsL21xcBQcxvrH5/E
      yCXZjMRPQwAm+ZKLo2fJptKUrJp2M1sbZDJZxq++RCq61Zg7srLMxNWXef3mDZYXFxvTYxsr
      rG/HyaRTVAyzPtVgp2CTy+bowUSv74lso4itBMmnE6RjcXbnTkQ3yWbTTF27SWxrvVH20tIq
      L7/6OjfmRlle3W5MX1taIJbKkE4mMetxm+Uclhokmy3ilHLsjmGei20RHJkiGU+QiMUaZaS2
      NkgnU0y/9CqJyEZj+up6hFdff4PpAQ/r27k9GctsrtM/OUMyniAebZa1ublFtny0VxQAAAWx
      SURBVFDl5vUxVjd23413Wd2I8vobbzAalIgkdvd0Dvfv3iZbzJOIpbHrl3rptSV6x0cpGR6y
      yWbZ2+sbTFyaIJ7KEItGG9O3IhEKFYOrk/1E4rsd+ZpE4gXe+OQnoZihZO2OAG9w+6Pb5HI5
      Mtl8Y0+8tbbOQJ8fyT9EbLOZ97XNGNPDYTL5HNHt5rv+m1sR8iWDm1eHWFnP1NdpgWxZ4ZOf
      fINcbIvWseMrhTRazxCZZJx0PN44OmSjETLZHIPTV8kkmus1trrE0OyLvP7qyyif/exnP8sJ
      UK1W8Xq9gIIku4xPTRLf3qZvaBiPIuMPhcmlYiSTGUbGJwn4fQB0+X1srq+zk8kwMjFNl7d2
      bhzqHyLcrWE4GpPju2pW0AspvP5udFtifLC/1vWFooHkMDE2RDy5w9DwIDIQ6AmSTqVIJxJM
      zMzhr5fd5VFY39wikcxyafYSHrW27xocGccn29hyF+MjtSODrHjIJLbx+Xw4WhfDfbVbv95u
      P5bpMDrQQyZfYXCgDwnwh0Jk03ES8TSTl2bw+zwAqJLN5laUnG4yMz2OIkuNnHUFujENl+G+
      btL5MkODtT1ywKcRT6bIFg1mZibRlNqo7AoWW5EoJQOmJkdQJAmQGZucxq4UCfaN0hfyA+AL
      dLOxskVPt4ovECYcDNTz7gWli4DqUHEU+sLBem5kkqkM+YrN7KXJ+hFcwTaLRKMxLKWLscG+
      epcjKtMz0+TTSYanLhGo59fnVdlO5JGsIn3D44117dUUusKDUCkgaX5CwdqR0O9VSKRSZIs2
      V+cma6O/Kxp6PkU8kaQr1E9/qKexnXX3BHEch4mRAWIt67srGCKfipNKZxgaHaenu3Z07Or2
      s7W+zs7OzmkcARysaoVIJIpZMajWe/MyqxW07l6GB/vYWm/uFdLxGJVqld6hCVLRSGP6yoN5
      VtcjTEyN8PDBWn2qRTqdo2K69KsShfoRwLGrrDx8yPff/4hipdI4BUrHI+T0CqZls73VPOrE
      o9sYpkUsFqNSaZ6Pz9/6kO1khu2NNfL183Tb0klnCmTjUXTDalwDZONJbKfKrbsPqRpGs+y1
      TXqHBrBcm2jL3nynUAazjORUSO00rzsALMtGL+6Qyhb2XE9UqgaDg4OEghqry7t7aZdYNEbV
      sBgfCRPd3jXa2Hz8wfuk8g5+J09ar8VfTCWpug6e7l6qxeaRJ5tM8GD+DgurESrl5vXFxsY6
      1WqZql4gkdk1pFhENmOYZonoVqrl2qvMu++8R7FUYnlpvbknzqSoGAaRSAy3ZbC7VCZHcmOR
      rViyUQZAPJmlp0vDNgrE07X226aOpHVR2CmQSSb2XAM4jkOlVCCWzFBtuS4zqxXUrh6GB/uJ
      bDSPvjvxGGWzSrB/9DQEIJHN5QiFw4RCPY0KZdmlWKoSDofxd/kac6uah0tz1ymmIxR0Y8/0
      ay/eIL6xTMW0G2UH+waZGe1lZaMpFlwYHJtibnaW/lCg2SucJDM3d5XZuVm8arM7p+m5q3R7
      NUJ9Q/S3nIvOXb2OV1MYGB4n2O0FQNECXJ2bQpI1pi9NNdqjagobK2tMzV2ny9NMq6rJLC5s
      cuPmS6g0V74mOWwnMxiGjde392acLEvkixXC4TDd/mZuysUcqi9AOByq7/1rdAVCXJ+bZnlx
      BaelJ6pAuJ8rU4MsrjbFrnk1RiZmkY0c6VxTXMgKcy9cY3bm8p7XWbz+EHOXZ7k8M9XoihBU
      rr94FVmWmbw0jSbvXgP4uH59FllWmZ6ZalwDDE9cYiDox9/Ty+hQX7NOyyCaLvHC1Rlsu3lS
      Y1ZK5CsSV6bHGy9XyoqXUi5NQS8hq9qezrhkCXKFIuFwmJ7u5vXU4/KoejxMXbpGNRcTzwFa
      MU0TTdP2TnRdTMvaN922TJDVxkX9cXDecua6DpblomnKnumObeFKtYearRyY3+fkeXP2/wEp
      E6Mile4z7wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Population per Year' width='192'>
      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
      L7/8Mu+//z5PPvnktrRnJ6iaxuuXprk0FuBffH3rJ/IqXVlfKRa3lyOP3P2eet39VSVsisPh
      oKur687yivF4nMbGRrq6uu48mNLf38/58+dpbm4mFArt+qexDLLMi0/00tNcx78/dZG/92Q/
      Twy2POhmfWHsqrtAuq4zPj6Ox+NBlmUikQi6ruPz+RgbG+PQoUMsLi5iMBjo6Ojgww8/5ODB
      g5jN5m1pz05L54r8l//3IbVuG996dnjL5zgq0a4KgLB+SfSr96f5aHKZP37pEE1e9+/+0AYU
      i0VOnTrF8PDwnTtbx48fR5Zlzp49Szqdpru7m5s3b9LX18fy8jLZbJZXXnllW9qzXR7qZ4KF
      zzLIMi8d6+UbJwb5i1cv8/6NxW25zNN1Ha/XSyAQ4ObNm2QyGSKRCCaTifb2dhoaGvD5fCST
      Sdra2mhububxxx/f8nZsNxGAXaq/zcv3vv1lzl9b4K9eH6FY2tpnsjVNw2w2k8/n8fl8GAwG
      MpkMgUCAN954A6vVytLSEvX19aysrLCysnLPyT6AdDrNL3/5S+bn53n33Xe5cOECAIlEgrfe
      eovp6WkuX77MuXPn0DSN9957j2w2u6XHdDfiEmiX03SdX7w3yZXJZU5+qZvH9jVjkDf/vabr
      OoqiIMsysiyjKAorKyt4vV4kSUKSJAwGA6qqYjKZ0HUd+XP2OzMzw8jICEePHuX06dP09vZy
      +PBhFEUhlUpx/fp1Hn/8cc6cOUN/fz9nz57lq1/9Kh6PZ9PH8nnEKGqXkyWJrx3vo9pp5T++
      epm+D27R3VRDf5uXnuY63A7Lhh7flCTpU2/pMZlMtLS0UFJUZpfj7G2pQ/4kBLd///M0NTXR
      2trKm2++yde//nXOnTuHoigkk0muX7/O8ePHOXfuHIcOHeL69etks1nm5+e3PQCiB/iC0DSd
      aDKLJEnMB9eY8Ee4FYiRyhXp8NUw0Oahv82Lt9qOLEufe8Lquo72yYM+oViG5UiKpXCSlVia
      xdUkc8E4gx31dDbW0NVUQ3tDDb46J4bP2W48HufKlSvs27ePhYUFjEYjuq7j8XiYmpqira2N
      hYUFrFYrR48eJRaL4XK5sNm29+k6EYCHVDAYZGFhgQMHDuD3+6mtrcXj8VAqlRgdHWVoaIjx
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
